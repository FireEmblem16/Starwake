///////////////////////////////////////////////////////////////////////////////////
////////////////////////////////// MoveBehaviour.h ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
/// This is the abstraction of what it means to move in a simulation.           ///
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
#ifndef _MOVE_BEHAVIOUR_H
#define _MOVE_BEHAVIOUR_H

#include <string>
#include "MoveInfo.h"
using std::string;

class MoveBehaviour
{
public:
	virtual MoveBehaviour* CreateNew() = 0;

	// Returns a string that represents the next move this Item will take.
	virtual string Move(MoveInfo* info, uint32_t x, uint32_t y, uint32_t last_x, uint32_t last_y, uint32_t width, uint32_t height) = 0;
};

#endif
