; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	c:\Users\The Science Guy\Documents\Visual Studio 2008\Projects\Naomi\Naomi\fsys.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?_FileSystems@@3PAPAU_FILE_SYSTEM@@A		; _FileSystems
_BSS	SEGMENT
?_FileSystems@@3PAPAU_FILE_SYSTEM@@A DD 01aH DUP (?)	; _FileSystems
_BSS	ENDS
PUBLIC	?volOpenFile@@YA?AU_FILE@@PBD@Z			; volOpenFile
EXTRN	__ctype:BYTE
; Function compile flags: /Ogtpy
; File c:\users\the science guy\documents\visual studio 2008\projects\naomi\naomi\fsys.cpp
;	COMDAT ?volOpenFile@@YA?AU_FILE@@PBD@Z
_TEXT	SEGMENT
$T2724 = -60						; size = 60
$T2720 = 8						; size = 4
_fname$ = 12						; size = 4
?volOpenFile@@YA?AU_FILE@@PBD@Z PROC			; volOpenFile, COMDAT

; 13   : 	FILE file;
; 14   : 	file.flags = FS_INVALID;
; 15   : 
; 16   : 	if(fname)

	mov	eax, DWORD PTR _fname$[esp-4]
	sub	esp, 60					; 0000003cH
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR $T2720[esp+64]
	mov	DWORD PTR [ebp+32], 2
	test	eax, eax
	je	SHORT $LN1@volOpenFil

; 17   : 	{
; 18   : 		unsigned char device = 'a';
; 19   : 		char* filename = (char*)fname;
; 20   : 
; 21   : 		if(fname[1] == ':')

	cmp	BYTE PTR [eax+1], 58			; 0000003aH
	mov	cl, 97					; 00000061H
	mov	edx, eax
	jne	SHORT $LN4@volOpenFil

; 22   : 		{
; 23   : 			device = fname[0];

	mov	cl, BYTE PTR [eax]

; 24   : 			filename += 3;

	lea	edx, DWORD PTR [eax+3]
$LN4@volOpenFil:

; 25   : 		}
; 26   : 
; 27   : 		device = tolower(device);

	movzx	eax, cl
	test	BYTE PTR __ctype[eax+1], 1
	je	SHORT $LN8@volOpenFil
	add	al, 32					; 00000020H
$LN8@volOpenFil:

; 28   : 		if(device < 'a' || device > 'z')

	mov	cl, al
	sub	cl, 97					; 00000061H
	cmp	cl, 25					; 00000019H
	ja	SHORT $LN1@volOpenFil

; 29   : 			return file;
; 30   : 
; 31   : 		if(_FileSystems[device - 'a'])

	movzx	ebx, al
	mov	eax, DWORD PTR ?_FileSystems@@3PAPAU_FILE_SYSTEM@@A[ebx*4-388]
	test	eax, eax
	je	SHORT $LN1@volOpenFil

; 32   : 		{
; 33   : 			file = _FileSystems[device - 'a']->Open(filename);

	mov	eax, DWORD PTR [eax+24]
	push	esi
	push	edi
	push	edx
	lea	edx, DWORD PTR $T2724[esp+80]
	push	edx
	call	eax
	add	esp, 8
	mov	ecx, 15					; 0000000fH
	mov	esi, eax
	mov	edi, ebp
	rep movsd
	pop	edi

; 34   : 			file.deviceID = device;

	mov	DWORD PTR [ebp+56], ebx
	pop	esi
$LN1@volOpenFil:

; 35   : 			return file;
; 36   : 		}
; 37   : 	}
; 38   : 
; 39   : 	return file;

	mov	eax, ebp
	pop	ebp
	pop	ebx

; 40   : }

	add	esp, 60					; 0000003cH
	ret	0
?volOpenFile@@YA?AU_FILE@@PBD@Z ENDP			; volOpenFile
_TEXT	ENDS
PUBLIC	?volReadFile@@YAXPAU_FILE@@PAEI@Z		; volReadFile
; Function compile flags: /Ogtpy
;	COMDAT ?volReadFile@@YAXPAU_FILE@@PAEI@Z
_TEXT	SEGMENT
_file$ = 8						; size = 4
_Buffer$ = 12						; size = 4
_Length$ = 16						; size = 4
?volReadFile@@YAXPAU_FILE@@PAEI@Z PROC			; volReadFile, COMDAT

; 44   : 	if(file)

	mov	ecx, DWORD PTR _file$[esp-4]
	test	ecx, ecx
	je	SHORT $LN1@volReadFil

; 45   : 		if(_FileSystems[file->deviceID - 'a'])

	mov	eax, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR ?_FileSystems@@3PAPAU_FILE_SYSTEM@@A[eax*4-388]
	test	eax, eax
	je	SHORT $LN1@volReadFil

; 46   : 			_FileSystems[file->deviceID - 'a']->Read(file,Buffer,Length);

	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR _file$[esp-4], ecx
	jmp	eax
$LN1@volReadFil:

; 47   : 
; 48   : 	return;
; 49   : }

	ret	0
?volReadFile@@YAXPAU_FILE@@PAEI@Z ENDP			; volReadFile
_TEXT	ENDS
PUBLIC	?volCloseFile@@YAXPAU_FILE@@@Z			; volCloseFile
; Function compile flags: /Ogtpy
;	COMDAT ?volCloseFile@@YAXPAU_FILE@@@Z
_TEXT	SEGMENT
_file$ = 8						; size = 4
?volCloseFile@@YAXPAU_FILE@@@Z PROC			; volCloseFile, COMDAT

; 53   : 	if(file)

	mov	ecx, DWORD PTR _file$[esp-4]
	test	ecx, ecx
	je	SHORT $LN1@volCloseFi

; 54   : 		if(_FileSystems[file->deviceID - 'a'])

	mov	eax, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR ?_FileSystems@@3PAPAU_FILE_SYSTEM@@A[eax*4-388]
	test	eax, eax
	je	SHORT $LN1@volCloseFi

; 55   : 			_FileSystems[file->deviceID - 'a']->Close(file);

	mov	DWORD PTR _file$[esp-4], ecx
	mov	ecx, DWORD PTR [eax+20]
	jmp	ecx
$LN1@volCloseFi:

; 56   : 
; 57   : 	return;
; 58   : }

	ret	0
?volCloseFile@@YAXPAU_FILE@@@Z ENDP			; volCloseFile
_TEXT	ENDS
PUBLIC	?volRegisterFileSystem@@YAXPAU_FILE_SYSTEM@@I@Z	; volRegisterFileSystem
;	COMDAT ?i@?1??volRegisterFileSystem@@YAXPAU_FILE_SYSTEM@@I@Z@4HA
_BSS	SEGMENT
?i@?1??volRegisterFileSystem@@YAXPAU_FILE_SYSTEM@@I@Z@4HA DD 01H DUP (?) ; `volRegisterFileSystem'::`2'::i
; Function compile flags: /Ogtpy
_BSS	ENDS
;	COMDAT ?volRegisterFileSystem@@YAXPAU_FILE_SYSTEM@@I@Z
_TEXT	SEGMENT
_fsys$ = 8						; size = 4
_deviceID$ = 12						; size = 4
?volRegisterFileSystem@@YAXPAU_FILE_SYSTEM@@I@Z PROC	; volRegisterFileSystem, COMDAT

; 62   : 	static int i = 0;
; 63   : 	
; 64   : 	if(i < DEVICE_MAX)

	cmp	DWORD PTR ?i@?1??volRegisterFileSystem@@YAXPAU_FILE_SYSTEM@@I@Z@4HA, 26 ; 0000001aH
	jge	SHORT $LN1@volRegiste

; 65   : 		if(fsys)

	mov	eax, DWORD PTR _fsys$[esp-4]
	test	eax, eax
	je	SHORT $LN1@volRegiste

; 66   : 		{
; 67   : 			_FileSystems[deviceID] = fsys;

	mov	ecx, DWORD PTR _deviceID$[esp-4]

; 68   : 			i++;

	inc	DWORD PTR ?i@?1??volRegisterFileSystem@@YAXPAU_FILE_SYSTEM@@I@Z@4HA
	mov	DWORD PTR ?_FileSystems@@3PAPAU_FILE_SYSTEM@@A[ecx*4], eax
$LN1@volRegiste:

; 69   : 		}
; 70   : 
; 71   : 	return;
; 72   : }

	ret	0
?volRegisterFileSystem@@YAXPAU_FILE_SYSTEM@@I@Z ENDP	; volRegisterFileSystem
_TEXT	ENDS
PUBLIC	?volUnregisterFileSystem@@YAXPAU_FILE_SYSTEM@@@Z ; volUnregisterFileSystem
; Function compile flags: /Ogtpy
;	COMDAT ?volUnregisterFileSystem@@YAXPAU_FILE_SYSTEM@@@Z
_TEXT	SEGMENT
_fsys$ = 8						; size = 4
?volUnregisterFileSystem@@YAXPAU_FILE_SYSTEM@@@Z PROC	; volUnregisterFileSystem, COMDAT

; 76   : 	for(int i = 0;i < DEVICE_MAX;i++)

	mov	ecx, DWORD PTR _fsys$[esp-4]
	mov	eax, OFFSET ?_FileSystems@@3PAPAU_FILE_SYSTEM@@A ; _FileSystems
	npad	7
$LL4@volUnregis:

; 77   : 		if(_FileSystems[i] == fsys)

	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN3@volUnregis

; 78   : 			_FileSystems[i] = 0;

	mov	DWORD PTR [eax], 0
$LN3@volUnregis:

; 76   : 	for(int i = 0;i < DEVICE_MAX;i++)

	add	eax, 4
	cmp	eax, OFFSET ?_FileSystems@@3PAPAU_FILE_SYSTEM@@A+104
	jl	SHORT $LL4@volUnregis

; 79   : 
; 80   : 	return;
; 81   : }

	ret	0
?volUnregisterFileSystem@@YAXPAU_FILE_SYSTEM@@@Z ENDP	; volUnregisterFileSystem
_TEXT	ENDS
PUBLIC	?volUnregisterFileSystemByID@@YAXI@Z		; volUnregisterFileSystemByID
; Function compile flags: /Ogtpy
;	COMDAT ?volUnregisterFileSystemByID@@YAXI@Z
_TEXT	SEGMENT
_deviceID$ = 8						; size = 4
?volUnregisterFileSystemByID@@YAXI@Z PROC		; volUnregisterFileSystemByID, COMDAT

; 85   : 	if(deviceID < DEVICE_MAX)

	mov	eax, DWORD PTR _deviceID$[esp-4]
	cmp	eax, 26					; 0000001aH
	jae	SHORT $LN1@volUnregis@2

; 86   : 		_FileSystems[deviceID] = 0;

	mov	DWORD PTR ?_FileSystems@@3PAPAU_FILE_SYSTEM@@A[eax*4], 0
$LN1@volUnregis@2:

; 87   : 
; 88   : 	return;
; 89   : }

	ret	0
?volUnregisterFileSystemByID@@YAXI@Z ENDP		; volUnregisterFileSystemByID
_TEXT	ENDS
END
