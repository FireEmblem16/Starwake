; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	c:\Program Files\The Game Creators\Dark GDK\Include\DBO Format\DBOFile.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?LoadDBOEx@@YAHPADPAPAUsObject@@@Z		; LoadDBOEx
EXTRN	?ConstructObject@@YA_NPAPAUsObject@@PAPAD@Z:PROC ; ConstructObject
EXTRN	?DBOLoadBlockFile@@YA_NPADPAK1@Z:PROC		; DBOLoadBlockFile
; Function compile flags: /Odtp /ZI
; File c:\program files\the game creators\dark gdk\include\dbo format\dbofile.cpp
;	COMDAT ?LoadDBOEx@@YAHPADPAPAUsObject@@@Z
_TEXT	SEGMENT
_pDBOBlock$ = -8					; size = 4
_dwBlockSize$ = -4					; size = 4
_pFilename$ = 8						; size = 4
_ppObject$ = 12						; size = 4
?LoadDBOEx@@YAHPADPAPAUsObject@@@Z PROC			; LoadDBOEx, COMDAT

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 15   : 	DWORD dwBlockSize = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _dwBlockSize$[ebp], 0

; 16   : 	DWORD* pDBOBlock = NULL;

  00010	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pDBOBlock$[ebp], 0

; 17   : 
; 18   : 	if ( !DBOLoadBlockFile ( pFilename, (DWORD*)&pDBOBlock, &dwBlockSize ) )

  00017	8d 45 fc	 lea	 eax, DWORD PTR _dwBlockSize$[ebp]
  0001a	50		 push	 eax
  0001b	8d 4d f8	 lea	 ecx, DWORD PTR _pDBOBlock$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR _pFilename$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?DBOLoadBlockFile@@YA_NPADPAK1@Z ; DBOLoadBlockFile
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002b	0f b6 c0	 movzx	 eax, al
  0002e	85 c0		 test	 eax, eax
  00030	75 05		 jne	 SHORT $LN2@LoadDBOEx

; 19   : 		return -1;

  00032	83 c8 ff	 or	 eax, -1
  00035	eb 23		 jmp	 SHORT $LN3@LoadDBOEx
$LN2@LoadDBOEx:

; 20   : 
; 21   : 	if ( !ConstructObject ( ppObject, (LPSTR*)&pDBOBlock ) )

  00037	8d 45 f8	 lea	 eax, DWORD PTR _pDBOBlock$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR _ppObject$[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 ?ConstructObject@@YA_NPAPAUsObject@@PAPAD@Z ; ConstructObject
  00044	83 c4 08	 add	 esp, 8
  00047	0f b6 d0	 movzx	 edx, al
  0004a	85 d2		 test	 edx, edx
  0004c	75 07		 jne	 SHORT $LN1@LoadDBOEx

; 22   : 		return -2;

  0004e	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00053	eb 05		 jmp	 SHORT $LN3@LoadDBOEx
$LN1@LoadDBOEx:

; 23   : 
; 24   : 	return 1;

  00055	b8 01 00 00 00	 mov	 eax, 1
$LN3@LoadDBOEx:

; 25   : }

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?LoadDBOEx@@YAHPADPAPAUsObject@@@Z ENDP			; LoadDBOEx
_TEXT	ENDS
PUBLIC	?SaveDBOEx@@YAHPADPAUsObject@@@Z		; SaveDBOEx
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?DBOSaveBlockFile@@YA_NPADKK@Z:PROC		; DBOSaveBlockFile
EXTRN	?DBOConvertObjectToBlock@@YA_NPAUsObject@@PAK1@Z:PROC ; DBOConvertObjectToBlock
; Function compile flags: /Odtp /ZI
;	COMDAT ?SaveDBOEx@@YAHPADPAUsObject@@@Z
_TEXT	SEGMENT
$T56989 = -76						; size = 4
_pDBOBlock$ = -8					; size = 4
_dwBlockSize$ = -4					; size = 4
_pFilename$ = 8						; size = 4
_pObject$ = 12						; size = 4
?SaveDBOEx@@YAHPADPAUsObject@@@Z PROC			; SaveDBOEx, COMDAT

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 29   : 	// DBOBlock ptr
; 30   : 	DWORD dwBlockSize = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _dwBlockSize$[ebp], 0

; 31   : 	DWORD* pDBOBlock = NULL;

  00010	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pDBOBlock$[ebp], 0

; 32   : 
; 33   : 	// convert pObject to DBOBlock
; 34   : 	if ( !DBOConvertObjectToBlock ( pObject, (DWORD*)&pDBOBlock, &dwBlockSize ) )

  00017	8d 45 fc	 lea	 eax, DWORD PTR _dwBlockSize$[ebp]
  0001a	50		 push	 eax
  0001b	8d 4d f8	 lea	 ecx, DWORD PTR _pDBOBlock$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 0c	 mov	 edx, DWORD PTR _pObject$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?DBOConvertObjectToBlock@@YA_NPAUsObject@@PAK1@Z ; DBOConvertObjectToBlock
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002b	0f b6 c0	 movzx	 eax, al
  0002e	85 c0		 test	 eax, eax
  00030	75 07		 jne	 SHORT $LN3@SaveDBOEx

; 35   : 		return -2;

  00032	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00037	eb 46		 jmp	 SHORT $LN4@SaveDBOEx
$LN3@SaveDBOEx:

; 36   : 		
; 37   : 	// save DBOBlock to file
; 38   : 	if ( !DBOSaveBlockFile ( pFilename, (DWORD)pDBOBlock, dwBlockSize ) )

  00039	8b 45 fc	 mov	 eax, DWORD PTR _dwBlockSize$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _pDBOBlock$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR _pFilename$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?DBOSaveBlockFile@@YA_NPADKK@Z ; DBOSaveBlockFile
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004d	0f b6 c0	 movzx	 eax, al
  00050	85 c0		 test	 eax, eax
  00052	75 07		 jne	 SHORT $LN2@SaveDBOEx

; 39   : 		return -3;

  00054	b8 fd ff ff ff	 mov	 eax, -3			; fffffffdH
  00059	eb 24		 jmp	 SHORT $LN4@SaveDBOEx
$LN2@SaveDBOEx:

; 40   : 
; 41   : 	// free block when done
; 42   : 	SAFE_DELETE(pDBOBlock);

  0005b	83 7d f8 00	 cmp	 DWORD PTR _pDBOBlock$[ebp], 0
  0005f	74 19		 je	 SHORT $LN1@SaveDBOEx
  00061	8b 45 f8	 mov	 eax, DWORD PTR _pDBOBlock$[ebp]
  00064	89 45 b4	 mov	 DWORD PTR $T56989[ebp], eax
  00067	8b 4d b4	 mov	 ecx, DWORD PTR $T56989[ebp]
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00070	83 c4 04	 add	 esp, 4
  00073	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pDBOBlock$[ebp], 0
$LN1@SaveDBOEx:

; 43   : 
; 44   : 	// okay
; 45   : 	return 1;

  0007a	b8 01 00 00 00	 mov	 eax, 1
$LN4@SaveDBOEx:

; 46   : }

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?SaveDBOEx@@YAHPADPAUsObject@@@Z ENDP			; SaveDBOEx
_TEXT	ENDS
END
