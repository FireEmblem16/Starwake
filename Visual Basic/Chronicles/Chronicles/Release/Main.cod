; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	c:\Users\FireEmblem16\Documents\Visual Studio 2008\Projects\Chronicles\Chronicles\Source\Main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@GHFPNOJB@bad?5allocation?$AA@		; `string'
_DATA	SEGMENT
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
_DATA	ENDS
;	COMDAT ??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
CONST	SEGMENT
??_C@_0P@GHFPNOJB@bad?5allocation?$AA@ DB 'bad allocation', 00H ; `string'
CONST	ENDS
PUBLIC	?CompareStrings@@YA_NPAD0@Z			; CompareStrings
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /ZI
; File c:\users\fireemblem16\documents\visual studio 2008\projects\chronicles\chronicles\headers\functions.h
;	COMDAT ?CompareStrings@@YA_NPAD0@Z
_TEXT	SEGMENT
_i$90295 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?CompareStrings@@YA_NPAD0@Z PROC			; CompareStrings, COMDAT

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 29   : 	if(strlen(a)!=strlen(b))

  00009	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 _strlen
  00012	83 c4 04	 add	 esp, 4
  00015	8b f0		 mov	 esi, eax
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _b$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 _strlen
  00020	83 c4 04	 add	 esp, 4
  00023	3b f0		 cmp	 esi, eax
  00025	74 04		 je	 SHORT $LN5@CompareStr

; 30   : 		return false;

  00027	32 c0		 xor	 al, al
  00029	eb 44		 jmp	 SHORT $LN6@CompareStr
$LN5@CompareStr:

; 31   : 
; 32   : 	for(int i=0;a[i]==b[i];i++)

  0002b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$90295[ebp], 0
  00032	eb 09		 jmp	 SHORT $LN4@CompareStr
$LN3@CompareStr:
  00034	8b 45 fc	 mov	 eax, DWORD PTR _i$90295[ebp]
  00037	83 c0 01	 add	 eax, 1
  0003a	89 45 fc	 mov	 DWORD PTR _i$90295[ebp], eax
$LN4@CompareStr:
  0003d	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  00040	03 45 fc	 add	 eax, DWORD PTR _i$90295[ebp]
  00043	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00046	8b 55 0c	 mov	 edx, DWORD PTR _b$[ebp]
  00049	03 55 fc	 add	 edx, DWORD PTR _i$90295[ebp]
  0004c	0f be 02	 movsx	 eax, BYTE PTR [edx]
  0004f	3b c8		 cmp	 ecx, eax
  00051	75 1a		 jne	 SHORT $LN2@CompareStr

; 33   : 		if(i==strlen(a)-1)

  00053	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 _strlen
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 e8 01	 sub	 eax, 1
  00062	39 45 fc	 cmp	 DWORD PTR _i$90295[ebp], eax
  00065	75 04		 jne	 SHORT $LN1@CompareStr

; 34   : 			return true;

  00067	b0 01		 mov	 al, 1
  00069	eb 04		 jmp	 SHORT $LN6@CompareStr
$LN1@CompareStr:

; 35   : 
; 36   : 	return false;

  0006b	eb c7		 jmp	 SHORT $LN3@CompareStr
$LN2@CompareStr:
  0006d	32 c0		 xor	 al, al
$LN6@CompareStr:

; 37   : }

  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
?CompareStrings@@YA_NPAD0@Z ENDP			; CompareStrings
_TEXT	ENDS
PUBLIC	??_C@_0N@FICAGCGB@Data?5?$DN?5false?$AA@	; `string'
PUBLIC	??_C@_0M@CCBFPEFB@Data?5?$DN?5true?$AA@		; `string'
PUBLIC	?ShowSomeData@@YAX_NH@Z				; ShowSomeData
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?dbText@@YAXHHPAD@Z:PROC			; dbText
EXTRN	?dbTextWidth@@YAHPAD@Z:PROC			; dbTextWidth
EXTRN	?dbScreenWidth@@YAHXZ:PROC			; dbScreenWidth
EXTRN	?dbTextHeight@@YAHPAD@Z:PROC			; dbTextHeight
EXTRN	?dbScreenHeight@@YAHXZ:PROC			; dbScreenHeight
;	COMDAT ??_C@_0N@FICAGCGB@Data?5?$DN?5false?$AA@
CONST	SEGMENT
??_C@_0N@FICAGCGB@Data?5?$DN?5false?$AA@ DB 'Data = false', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CCBFPEFB@Data?5?$DN?5true?$AA@
CONST	SEGMENT
??_C@_0M@CCBFPEFB@Data?5?$DN?5true?$AA@ DB 'Data = true', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?ShowSomeData@@YAX_NH@Z
_TEXT	SEGMENT
$T91897 = -72						; size = 4
_data$ = -4						; size = 4
_rawdata$ = 8						; size = 1
_num$ = 12						; size = 4
?ShowSomeData@@YAX_NH@Z PROC				; ShowSomeData, COMDAT

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 41   : 	char* data;
; 42   : 
; 43   : 	if(rawdata)

  00009	0f b6 45 08	 movzx	 eax, BYTE PTR _rawdata$[ebp]
  0000d	85 c0		 test	 eax, eax
  0000f	74 09		 je	 SHORT $LN2@ShowSomeDa

; 44   : 		data="Data = true";

  00011	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _data$[ebp], OFFSET ??_C@_0M@CCBFPEFB@Data?5?$DN?5true?$AA@

; 45   : 	else

  00018	eb 07		 jmp	 SHORT $LN1@ShowSomeDa
$LN2@ShowSomeDa:

; 46   : 		data="Data = false";

  0001a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _data$[ebp], OFFSET ??_C@_0N@FICAGCGB@Data?5?$DN?5false?$AA@
$LN1@ShowSomeDa:

; 47   : 
; 48   : 	dbText(dbScreenWidth()-20-dbTextWidth(data),dbScreenHeight()-40-dbTextHeight(data)*num,data);

  00021	8b 45 fc	 mov	 eax, DWORD PTR _data$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?dbScreenHeight@@YAHXZ	; dbScreenHeight
  0002a	8b f0		 mov	 esi, eax
  0002c	83 ee 28	 sub	 esi, 40			; 00000028H
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _data$[ebp]
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 ?dbTextHeight@@YAHPAD@Z	; dbTextHeight
  00038	83 c4 04	 add	 esp, 4
  0003b	0f af 45 0c	 imul	 eax, DWORD PTR _num$[ebp]
  0003f	2b f0		 sub	 esi, eax
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 ?dbScreenWidth@@YAHXZ	; dbScreenWidth
  00047	8b f0		 mov	 esi, eax
  00049	83 ee 14	 sub	 esi, 20			; 00000014H
  0004c	8b 55 fc	 mov	 edx, DWORD PTR _data$[ebp]
  0004f	52		 push	 edx
  00050	e8 00 00 00 00	 call	 ?dbTextWidth@@YAHPAD@Z	; dbTextWidth
  00055	83 c4 04	 add	 esp, 4
  00058	2b f0		 sub	 esi, eax
  0005a	56		 push	 esi
  0005b	e8 00 00 00 00	 call	 ?dbText@@YAXHHPAD@Z	; dbText
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH

; 49   : 	
; 50   : 	delete data;

  00063	8b 45 fc	 mov	 eax, DWORD PTR _data$[ebp]
  00066	89 45 b8	 mov	 DWORD PTR $T91897[ebp], eax
  00069	8b 4d b8	 mov	 ecx, DWORD PTR $T91897[ebp]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00072	83 c4 04	 add	 esp, 4

; 51   : 
; 52   : 	return;
; 53   : }

  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?ShowSomeData@@YAX_NH@Z ENDP				; ShowSomeData
_TEXT	ENDS
PUBLIC	?ShowSomeData@@YAXPADH@Z			; ShowSomeData
; Function compile flags: /Odtp /ZI
;	COMDAT ?ShowSomeData@@YAXPADH@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
_num$ = 12						; size = 4
?ShowSomeData@@YAXPADH@Z PROC				; ShowSomeData, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	dbText(dbScreenWidth()-20-dbTextWidth(data),dbScreenHeight()-40-dbTextHeight(data)*num,data);

  00009	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?dbScreenHeight@@YAHXZ	; dbScreenHeight
  00012	8b f0		 mov	 esi, eax
  00014	83 ee 28	 sub	 esi, 40			; 00000028H
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _data$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?dbTextHeight@@YAHPAD@Z	; dbTextHeight
  00020	83 c4 04	 add	 esp, 4
  00023	0f af 45 0c	 imul	 eax, DWORD PTR _num$[ebp]
  00027	2b f0		 sub	 esi, eax
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?dbScreenWidth@@YAHXZ	; dbScreenWidth
  0002f	8b f0		 mov	 esi, eax
  00031	83 ee 14	 sub	 esi, 20			; 00000014H
  00034	8b 55 08	 mov	 edx, DWORD PTR _data$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ?dbTextWidth@@YAHPAD@Z	; dbTextWidth
  0003d	83 c4 04	 add	 esp, 4
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 ?dbText@@YAXHHPAD@Z	; dbText
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH

; 58   : 	
; 59   : 	return;
; 60   : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?ShowSomeData@@YAXPADH@Z ENDP				; ShowSomeData
_TEXT	ENDS
PUBLIC	??_C@_07DHCPEHKF@Data?5?$DN?5?$AA@		; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?ShowSomeData@@YAXMH@Z				; ShowSomeData
EXTRN	_strcat:PROC
EXTRN	?dbStr@@YAPADM@Z:PROC				; dbStr
EXTRN	_strcpy:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_07DHCPEHKF@Data?5?$DN?5?$AA@
CONST	SEGMENT
??_C@_07DHCPEHKF@Data?5?$DN?5?$AA@ DB 'Data = ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?ShowSomeData@@YAXMH@Z
_TEXT	SEGMENT
_szFPS$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
_num$ = 12						; size = 4
?ShowSomeData@@YAXMH@Z PROC				; ShowSomeData, COMDAT

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 64   : 	char szFPS[256]="";

  00016	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
  0001b	88 85 fc fe ff
	ff		 mov	 BYTE PTR _szFPS$[ebp], al
  00021	68 ff 00 00 00	 push	 255			; 000000ffH
  00026	6a 00		 push	 0
  00028	8d 85 fd fe ff
	ff		 lea	 eax, DWORD PTR _szFPS$[ebp+1]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 _memset
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH

; 65   : 	strcpy(szFPS,"Data = ");

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_07DHCPEHKF@Data?5?$DN?5?$AA@
  0003c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szFPS$[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 _strcpy
  00048	83 c4 08	 add	 esp, 8

; 66   : 	strcat(szFPS,dbStr(data));

  0004b	51		 push	 ecx
  0004c	d9 45 08	 fld	 DWORD PTR _data$[ebp]
  0004f	d9 1c 24	 fstp	 DWORD PTR [esp]
  00052	e8 00 00 00 00	 call	 ?dbStr@@YAPADM@Z	; dbStr
  00057	83 c4 04	 add	 esp, 4
  0005a	50		 push	 eax
  0005b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szFPS$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 _strcat
  00067	83 c4 08	 add	 esp, 8

; 67   : 	dbText(dbScreenWidth()-20-dbTextWidth(szFPS),dbScreenHeight()-40-dbTextHeight(szFPS)*num,szFPS);

  0006a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szFPS$[ebp]
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?dbScreenHeight@@YAHXZ	; dbScreenHeight
  00076	8b f0		 mov	 esi, eax
  00078	83 ee 28	 sub	 esi, 40			; 00000028H
  0007b	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szFPS$[ebp]
  00081	51		 push	 ecx
  00082	e8 00 00 00 00	 call	 ?dbTextHeight@@YAHPAD@Z	; dbTextHeight
  00087	83 c4 04	 add	 esp, 4
  0008a	0f af 45 0c	 imul	 eax, DWORD PTR _num$[ebp]
  0008e	2b f0		 sub	 esi, eax
  00090	56		 push	 esi
  00091	e8 00 00 00 00	 call	 ?dbScreenWidth@@YAHXZ	; dbScreenWidth
  00096	8b f0		 mov	 esi, eax
  00098	83 ee 14	 sub	 esi, 20			; 00000014H
  0009b	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szFPS$[ebp]
  000a1	52		 push	 edx
  000a2	e8 00 00 00 00	 call	 ?dbTextWidth@@YAHPAD@Z	; dbTextWidth
  000a7	83 c4 04	 add	 esp, 4
  000aa	2b f0		 sub	 esi, eax
  000ac	56		 push	 esi
  000ad	e8 00 00 00 00	 call	 ?dbText@@YAXHHPAD@Z	; dbText
  000b2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 68   : 	
; 69   : 	return;
; 70   : }

  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bb	33 cd		 xor	 ecx, ebp
  000bd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?ShowSomeData@@YAXMH@Z ENDP				; ShowSomeData
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ShowSomeData@@YAXHH@Z				; ShowSomeData
EXTRN	?dbStr@@YAPADH@Z:PROC				; dbStr
; Function compile flags: /Odtp /ZI
;	COMDAT ?ShowSomeData@@YAXHH@Z
_TEXT	SEGMENT
_szFPS$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
_num$ = 12						; size = 4
?ShowSomeData@@YAXHH@Z PROC				; ShowSomeData, COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 74   : 	char szFPS[256]="";

  00016	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
  0001b	88 85 fc fe ff
	ff		 mov	 BYTE PTR _szFPS$[ebp], al
  00021	68 ff 00 00 00	 push	 255			; 000000ffH
  00026	6a 00		 push	 0
  00028	8d 85 fd fe ff
	ff		 lea	 eax, DWORD PTR _szFPS$[ebp+1]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 _memset
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH

; 75   : 	strcpy(szFPS,"Data = ");

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_07DHCPEHKF@Data?5?$DN?5?$AA@
  0003c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szFPS$[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 _strcpy
  00048	83 c4 08	 add	 esp, 8

; 76   : 	strcat(szFPS,dbStr(data));

  0004b	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?dbStr@@YAPADH@Z	; dbStr
  00054	83 c4 04	 add	 esp, 4
  00057	50		 push	 eax
  00058	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szFPS$[ebp]
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 _strcat
  00064	83 c4 08	 add	 esp, 8

; 77   : 	dbText(dbScreenWidth()-20-dbTextWidth(szFPS),dbScreenHeight()-40-dbTextHeight(szFPS)*num,szFPS);

  00067	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szFPS$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?dbScreenHeight@@YAHXZ	; dbScreenHeight
  00073	8b f0		 mov	 esi, eax
  00075	83 ee 28	 sub	 esi, 40			; 00000028H
  00078	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szFPS$[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ?dbTextHeight@@YAHPAD@Z	; dbTextHeight
  00084	83 c4 04	 add	 esp, 4
  00087	0f af 45 0c	 imul	 eax, DWORD PTR _num$[ebp]
  0008b	2b f0		 sub	 esi, eax
  0008d	56		 push	 esi
  0008e	e8 00 00 00 00	 call	 ?dbScreenWidth@@YAHXZ	; dbScreenWidth
  00093	8b f0		 mov	 esi, eax
  00095	83 ee 14	 sub	 esi, 20			; 00000014H
  00098	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szFPS$[ebp]
  0009e	52		 push	 edx
  0009f	e8 00 00 00 00	 call	 ?dbTextWidth@@YAHPAD@Z	; dbTextWidth
  000a4	83 c4 04	 add	 esp, 4
  000a7	2b f0		 sub	 esi, eax
  000a9	56		 push	 esi
  000aa	e8 00 00 00 00	 call	 ?dbText@@YAXHHPAD@Z	; dbText
  000af	83 c4 0c	 add	 esp, 12			; 0000000cH

; 78   : 	
; 79   : 	return;
; 80   : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b8	33 cd		 xor	 ecx, ebp
  000ba	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
?ShowSomeData@@YAXHH@Z ENDP				; ShowSomeData
_TEXT	ENDS
PUBLIC	??_C@_08KCCGPEHE@Button?50?$AA@			; `string'
PUBLIC	__real@4000000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@be800000
PUBLIC	__real@40000000
PUBLIC	__real@00000000
PUBLIC	??_C@_0BF@DJCACNOP@Objects?2Box?2Object?4X?$AA@	; `string'
PUBLIC	__real@3f000000
PUBLIC	??_C@_0O@DJIMKNBB@JoyStickY?5Max?$AA@		; `string'
PUBLIC	??_C@_0O@OAFLJKNL@JoyStickX?5Min?$AA@		; `string'
PUBLIC	??_C@_0O@PCNAHOLE@JoyStickX?5Max?$AA@		; `string'
PUBLIC	??_C@_0O@CLAHEJHO@JoyStickY?5Min?$AA@		; `string'
PUBLIC	??_C@_01FHEEJDEE@A?$AA@				; `string'
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
PUBLIC	??_C@_01ELNMCGJD@W?$AA@				; `string'
PUBLIC	??_C@_01CPLAODJH@S?$AA@				; `string'
PUBLIC	??_C@_0N@JFFAAPEI@Images?21?4jpg?$AA@		; `string'
PUBLIC	__real@3f8ccccd
PUBLIC	??_C@_0L@CJOIDFHO@Resources?2?$AA@		; `string'
PUBLIC	??_C@_0BN@IEPDBBDH@Chronicles?5of?5Mu?5Alpha?5Theta?$AA@ ; `string'
PUBLIC	?DarkGDK@@YAXXZ					; DarkGDK
EXTRN	?Sync@Window@@QAEXXZ:PROC			; Window::Sync
EXTRN	?Update@DeviceHandler@@QAEXXZ:PROC		; DeviceHandler::Update
EXTRN	?Update@KeyHandler@@QAEXXZ:PROC			; KeyHandler::Update
EXTRN	?Update@MouseHandler@@QAEXXZ:PROC		; MouseHandler::Update
EXTRN	?GetIsGenericInput@DeviceHandler@@QAE_NPADM@Z:PROC ; DeviceHandler::GetIsGenericInput
EXTRN	?IsPressed@KeyHandler@@QAE_NH@Z:PROC		; KeyHandler::IsPressed
EXTRN	?dbRotateObject@@YAXHMMM@Z:PROC			; dbRotateObject
EXTRN	?dbObjectAngleX@@YAMH@Z:PROC			; dbObjectAngleX
EXTRN	?dbObjectAngleY@@YAMH@Z:PROC			; dbObjectAngleY
EXTRN	?dbWrapValue@@YAMM@Z:PROC			; dbWrapValue
EXTRN	?dbObjectAngleZ@@YAMH@Z:PROC			; dbObjectAngleZ
EXTRN	?LoopGDK@@YA_NXZ:PROC				; LoopGDK
EXTRN	?dbPositionObject@@YAXHMMM@Z:PROC		; dbPositionObject
EXTRN	?dbPositionCamera@@YAXMMM@Z:PROC		; dbPositionCamera
EXTRN	?dbLoadObject@@YAXPADH@Z:PROC			; dbLoadObject
EXTRN	?dbFileExist@@YAHPAD@Z:PROC			; dbFileExist
EXTRN	?SetMouseBoundToCursor@MouseHandler@@QAEX_N@Z:PROC ; MouseHandler::SetMouseBoundToCursor
EXTRN	??0SaveFile@@QAE@E@Z:PROC			; SaveFile::SaveFile
EXTRN	??0DeviceHandler@@QAE@PAVMouseHandler@@HHMMPAD111@Z:PROC ; DeviceHandler::DeviceHandler
EXTRN	??0KeyHandler@@QAE@PAVMouseHandler@@HHPAD111@Z:PROC ; KeyHandler::KeyHandler
EXTRN	??0MouseHandler@@QAE@_NPADPAVWindow@@M@Z:PROC	; MouseHandler::MouseHandler
EXTRN	??0Window@@QAE@H_N00HHPAD1@Z:PROC		; Window::Window
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT ??_C@_08KCCGPEHE@Button?50?$AA@
; File c:\users\fireemblem16\documents\visual studio 2008\projects\chronicles\chronicles\source\main.cpp
CONST	SEGMENT
??_C@_08KCCGPEHE@Button?50?$AA@ DB 'Button 0', 00H	; `string'
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@be800000
CONST	SEGMENT
__real@be800000 DD 0be800000r			; -0.25
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0BF@DJCACNOP@Objects?2Box?2Object?4X?$AA@
CONST	SEGMENT
??_C@_0BF@DJCACNOP@Objects?2Box?2Object?4X?$AA@ DB 'Objects\Box\Object.X', 00H ; `string'
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_C@_0O@DJIMKNBB@JoyStickY?5Max?$AA@
CONST	SEGMENT
??_C@_0O@DJIMKNBB@JoyStickY?5Max?$AA@ DB 'JoyStickY Max', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OAFLJKNL@JoyStickX?5Min?$AA@
CONST	SEGMENT
??_C@_0O@OAFLJKNL@JoyStickX?5Min?$AA@ DB 'JoyStickX Min', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PCNAHOLE@JoyStickX?5Max?$AA@
CONST	SEGMENT
??_C@_0O@PCNAHOLE@JoyStickX?5Max?$AA@ DB 'JoyStickX Max', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CLAHEJHO@JoyStickY?5Min?$AA@
CONST	SEGMENT
??_C@_0O@CLAHEJHO@JoyStickY?5Min?$AA@ DB 'JoyStickY Min', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01FHEEJDEE@A?$AA@
CONST	SEGMENT
??_C@_01FHEEJDEE@A?$AA@ DB 'A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01ELNMCGJD@W?$AA@
CONST	SEGMENT
??_C@_01ELNMCGJD@W?$AA@ DB 'W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT
??_C@_01CPLAODJH@S?$AA@ DB 'S', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JFFAAPEI@Images?21?4jpg?$AA@
CONST	SEGMENT
??_C@_0N@JFFAAPEI@Images?21?4jpg?$AA@ DB 'Images\1.jpg', 00H ; `string'
CONST	ENDS
;	COMDAT __real@3f8ccccd
CONST	SEGMENT
__real@3f8ccccd DD 03f8ccccdr			; 1.1
CONST	ENDS
;	COMDAT ??_C@_0L@CJOIDFHO@Resources?2?$AA@
CONST	SEGMENT
??_C@_0L@CJOIDFHO@Resources?2?$AA@ DB 'Resources\', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IEPDBBDH@Chronicles?5of?5Mu?5Alpha?5Theta?$AA@
CONST	SEGMENT
??_C@_0BN@IEPDBBDH@Chronicles?5of?5Mu?5Alpha?5Theta?$AA@ DB 'Chronicles o'
	DB	'f Mu Alpha Theta', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DarkGDK@@YAXXZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?DarkGDK@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DarkGDK@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DarkGDK@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DarkGDK@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DarkGDK@@YAXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DarkGDK@@YAXXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DarkGDK@@YAXXZ$4
; Function compile flags: /Odtp /ZI
xdata$x	ENDS
;	COMDAT ?DarkGDK@@YAXXZ
_TEXT	SEGMENT
tv291 = -152						; size = 4
tv283 = -148						; size = 4
tv275 = -144						; size = 4
tv160 = -144						; size = 4
tv152 = -144						; size = 4
tv136 = -144						; size = 4
tv90 = -144						; size = 4
tv79 = -144						; size = 4
$T91912 = -140						; size = 4
$T91913 = -136						; size = 4
$T91916 = -132						; size = 4
$T91917 = -128						; size = 4
$T91920 = -124						; size = 4
$T91921 = -120						; size = 4
$T91924 = -116						; size = 4
$T91925 = -112						; size = 4
$T91928 = -108						; size = 4
$T91929 = -104						; size = 4
_Save$ = -36						; size = 4
_Controller$ = -32					; size = 4
_KeyBoard$ = -28					; size = 4
_Mouse$ = -24						; size = 4
_GameWindow$ = -20					; size = 4
_a$ = -14						; size = 1
_gameplay$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
?DarkGDK@@YAXXZ PROC					; DarkGDK, COMDAT

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DarkGDK@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 31   : 	bool gameplay=true;

  0002b	c6 45 f3 01	 mov	 BYTE PTR _gameplay$[ebp], 1

; 32   : 	bool a=true;

  0002f	c6 45 f2 01	 mov	 BYTE PTR _a$[ebp], 1

; 33   : 	Window* GameWindow=new Window(0,false,true,false,0,0,"Resources\\","Chronicles of Mu Alpha Theta");

  00033	6a 44		 push	 68			; 00000044H
  00035	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T91913[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR $T91913[ebp], 0
  00051	74 29		 je	 SHORT $LN8@DarkGDK
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@IEPDBBDH@Chronicles?5of?5Mu?5Alpha?5Theta?$AA@
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CJOIDFHO@Resources?2?$AA@
  0005d	6a 00		 push	 0
  0005f	6a 00		 push	 0
  00061	6a 00		 push	 0
  00063	6a 01		 push	 1
  00065	6a 00		 push	 0
  00067	6a 00		 push	 0
  00069	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR $T91913[ebp]
  0006f	e8 00 00 00 00	 call	 ??0Window@@QAE@H_N00HHPAD1@Z ; Window::Window
  00074	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv79[ebp], eax
  0007a	eb 0a		 jmp	 SHORT $LN9@DarkGDK
$LN8@DarkGDK:
  0007c	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
$LN9@DarkGDK:
  00086	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv79[ebp]
  0008c	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T91912[ebp], eax
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR $T91912[ebp]
  0009f	89 4d ec	 mov	 DWORD PTR _GameWindow$[ebp], ecx

; 34   : 	MouseHandler* Mouse=new MouseHandler(true,"Images\\1.jpg",GameWindow,1.1f);

  000a2	68 24 02 00 00	 push	 548			; 00000224H
  000a7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ac	83 c4 04	 add	 esp, 4
  000af	89 45 80	 mov	 DWORD PTR $T91917[ebp], eax
  000b2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000b9	83 7d 80 00	 cmp	 DWORD PTR $T91917[ebp], 0
  000bd	74 25		 je	 SHORT $LN10@DarkGDK
  000bf	51		 push	 ecx
  000c0	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3f8ccccd
  000c6	d9 1c 24	 fstp	 DWORD PTR [esp]
  000c9	8b 45 ec	 mov	 eax, DWORD PTR _GameWindow$[ebp]
  000cc	50		 push	 eax
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JFFAAPEI@Images?21?4jpg?$AA@
  000d2	6a 01		 push	 1
  000d4	8b 4d 80	 mov	 ecx, DWORD PTR $T91917[ebp]
  000d7	e8 00 00 00 00	 call	 ??0MouseHandler@@QAE@_NPADPAVWindow@@M@Z ; MouseHandler::MouseHandler
  000dc	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv90[ebp], eax
  000e2	eb 0a		 jmp	 SHORT $LN11@DarkGDK
$LN10@DarkGDK:
  000e4	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN11@DarkGDK:
  000ee	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv90[ebp]
  000f4	89 8d 7c ff ff
	ff		 mov	 DWORD PTR $T91916[ebp], ecx
  000fa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00101	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR $T91916[ebp]
  00107	89 55 e8	 mov	 DWORD PTR _Mouse$[ebp], edx

; 35   : 	KeyHandler* KeyBoard=new KeyHandler(Mouse,5,5,"A","D","W","S");

  0010a	68 2c 13 00 00	 push	 4908			; 0000132cH
  0010f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00114	83 c4 04	 add	 esp, 4
  00117	89 45 88	 mov	 DWORD PTR $T91921[ebp], eax
  0011a	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00121	83 7d 88 00	 cmp	 DWORD PTR $T91921[ebp], 0
  00125	74 2c		 je	 SHORT $LN12@DarkGDK
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_01CPLAODJH@S?$AA@
  0012c	68 00 00 00 00	 push	 OFFSET ??_C@_01ELNMCGJD@W?$AA@
  00131	68 00 00 00 00	 push	 OFFSET ??_C@_01CKDDGHAB@D?$AA@
  00136	68 00 00 00 00	 push	 OFFSET ??_C@_01FHEEJDEE@A?$AA@
  0013b	6a 05		 push	 5
  0013d	6a 05		 push	 5
  0013f	8b 45 e8	 mov	 eax, DWORD PTR _Mouse$[ebp]
  00142	50		 push	 eax
  00143	8b 4d 88	 mov	 ecx, DWORD PTR $T91921[ebp]
  00146	e8 00 00 00 00	 call	 ??0KeyHandler@@QAE@PAVMouseHandler@@HHPAD111@Z ; KeyHandler::KeyHandler
  0014b	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv136[ebp], eax
  00151	eb 0a		 jmp	 SHORT $LN13@DarkGDK
$LN12@DarkGDK:
  00153	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN13@DarkGDK:
  0015d	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv136[ebp]
  00163	89 4d 84	 mov	 DWORD PTR $T91920[ebp], ecx
  00166	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0016d	8b 55 84	 mov	 edx, DWORD PTR $T91920[ebp]
  00170	89 55 e4	 mov	 DWORD PTR _KeyBoard$[ebp], edx

; 36   : 	DeviceHandler* Controller=new DeviceHandler(Mouse,5,5,0.5f,0.5f,"JoyStickY Max","JoyStickX Min","JoyStickX Max","JoyStickY Min");

  00173	68 90 22 00 00	 push	 8848			; 00002290H
  00178	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0017d	83 c4 04	 add	 esp, 4
  00180	89 45 90	 mov	 DWORD PTR $T91925[ebp], eax
  00183	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  0018a	83 7d 90 00	 cmp	 DWORD PTR $T91925[ebp], 0
  0018e	74 40		 je	 SHORT $LN14@DarkGDK
  00190	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CLAHEJHO@JoyStickY?5Min?$AA@
  00195	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PCNAHOLE@JoyStickX?5Max?$AA@
  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OAFLJKNL@JoyStickX?5Min?$AA@
  0019f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DJIMKNBB@JoyStickY?5Max?$AA@
  001a4	51		 push	 ecx
  001a5	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3f000000
  001ab	d9 1c 24	 fstp	 DWORD PTR [esp]
  001ae	51		 push	 ecx
  001af	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3f000000
  001b5	d9 1c 24	 fstp	 DWORD PTR [esp]
  001b8	6a 05		 push	 5
  001ba	6a 05		 push	 5
  001bc	8b 45 e8	 mov	 eax, DWORD PTR _Mouse$[ebp]
  001bf	50		 push	 eax
  001c0	8b 4d 90	 mov	 ecx, DWORD PTR $T91925[ebp]
  001c3	e8 00 00 00 00	 call	 ??0DeviceHandler@@QAE@PAVMouseHandler@@HHMMPAD111@Z ; DeviceHandler::DeviceHandler
  001c8	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv152[ebp], eax
  001ce	eb 0a		 jmp	 SHORT $LN15@DarkGDK
$LN14@DarkGDK:
  001d0	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv152[ebp], 0
$LN15@DarkGDK:
  001da	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv152[ebp]
  001e0	89 4d 8c	 mov	 DWORD PTR $T91924[ebp], ecx
  001e3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001ea	8b 55 8c	 mov	 edx, DWORD PTR $T91924[ebp]
  001ed	89 55 e0	 mov	 DWORD PTR _Controller$[ebp], edx

; 37   : 	SaveFile* Save=new SaveFile(0xE2);

  001f0	6a 0c		 push	 12			; 0000000cH
  001f2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001f7	83 c4 04	 add	 esp, 4
  001fa	89 45 98	 mov	 DWORD PTR $T91929[ebp], eax
  001fd	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00204	83 7d 98 00	 cmp	 DWORD PTR $T91929[ebp], 0
  00208	74 15		 je	 SHORT $LN16@DarkGDK
  0020a	68 e2 00 00 00	 push	 226			; 000000e2H
  0020f	8b 4d 98	 mov	 ecx, DWORD PTR $T91929[ebp]
  00212	e8 00 00 00 00	 call	 ??0SaveFile@@QAE@E@Z	; SaveFile::SaveFile
  00217	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv160[ebp], eax
  0021d	eb 0a		 jmp	 SHORT $LN17@DarkGDK
$LN16@DarkGDK:
  0021f	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv160[ebp], 0
$LN17@DarkGDK:
  00229	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv160[ebp]
  0022f	89 45 94	 mov	 DWORD PTR $T91928[ebp], eax
  00232	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00239	8b 4d 94	 mov	 ecx, DWORD PTR $T91928[ebp]
  0023c	89 4d dc	 mov	 DWORD PTR _Save$[ebp], ecx

; 38   : 	Mouse->SetMouseBoundToCursor(false);

  0023f	6a 00		 push	 0
  00241	8b 4d e8	 mov	 ecx, DWORD PTR _Mouse$[ebp]
  00244	e8 00 00 00 00	 call	 ?SetMouseBoundToCursor@MouseHandler@@QAEX_N@Z ; MouseHandler::SetMouseBoundToCursor

; 39   : 
; 40   : 	if(dbFileExist("Objects\\Box\\Object.X")==1)

  00249	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DJCACNOP@Objects?2Box?2Object?4X?$AA@
  0024e	e8 00 00 00 00	 call	 ?dbFileExist@@YAHPAD@Z	; dbFileExist
  00253	83 c4 04	 add	 esp, 4
  00256	83 f8 01	 cmp	 eax, 1
  00259	75 0f		 jne	 SHORT $LN5@DarkGDK

; 41   : 		dbLoadObject("Objects\\Box\\Object.X",1);

  0025b	6a 01		 push	 1
  0025d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DJCACNOP@Objects?2Box?2Object?4X?$AA@
  00262	e8 00 00 00 00	 call	 ?dbLoadObject@@YAXPADH@Z ; dbLoadObject
  00267	83 c4 08	 add	 esp, 8
$LN5@DarkGDK:

; 42   : 	dbPositionCamera(0.0f,0.0f,0.0f);

  0026a	51		 push	 ecx
  0026b	d9 ee		 fldz
  0026d	d9 1c 24	 fstp	 DWORD PTR [esp]
  00270	51		 push	 ecx
  00271	d9 ee		 fldz
  00273	d9 1c 24	 fstp	 DWORD PTR [esp]
  00276	51		 push	 ecx
  00277	d9 ee		 fldz
  00279	d9 1c 24	 fstp	 DWORD PTR [esp]
  0027c	e8 00 00 00 00	 call	 ?dbPositionCamera@@YAXMMM@Z ; dbPositionCamera
  00281	83 c4 0c	 add	 esp, 12			; 0000000cH

; 43   : 	dbPositionObject(1,-0.25f,0.0f,2.0f);

  00284	51		 push	 ecx
  00285	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@40000000
  0028b	d9 1c 24	 fstp	 DWORD PTR [esp]
  0028e	51		 push	 ecx
  0028f	d9 ee		 fldz
  00291	d9 1c 24	 fstp	 DWORD PTR [esp]
  00294	51		 push	 ecx
  00295	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@be800000
  0029b	d9 1c 24	 fstp	 DWORD PTR [esp]
  0029e	6a 01		 push	 1
  002a0	e8 00 00 00 00	 call	 ?dbPositionObject@@YAXHMMM@Z ; dbPositionObject
  002a5	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@DarkGDK:

; 44   : 
; 45   : 	while(LoopGDK()&&gameplay)

  002a8	e8 00 00 00 00	 call	 ?LoopGDK@@YA_NXZ	; LoopGDK
  002ad	0f b6 c0	 movzx	 eax, al
  002b0	85 c0		 test	 eax, eax
  002b2	0f 84 e6 00 00
	00		 je	 $LN3@DarkGDK
  002b8	0f b6 45 f3	 movzx	 eax, BYTE PTR _gameplay$[ebp]
  002bc	85 c0		 test	 eax, eax
  002be	0f 84 da 00 00
	00		 je	 $LN3@DarkGDK

; 46   : 	{
; 47   : 		dbRotateObject(1,dbWrapValue(dbObjectAngleX(1)+2.0f),dbWrapValue(dbObjectAngleY(1)+1.0f),dbWrapValue(dbObjectAngleZ(1)+3.0f));

  002c4	6a 01		 push	 1
  002c6	e8 00 00 00 00	 call	 ?dbObjectAngleZ@@YAMH@Z	; dbObjectAngleZ
  002cb	83 c4 04	 add	 esp, 4
  002ce	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@4008000000000000
  002d4	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv275[ebp]
  002da	d9 85 70 ff ff
	ff		 fld	 DWORD PTR tv275[ebp]
  002e0	51		 push	 ecx
  002e1	d9 1c 24	 fstp	 DWORD PTR [esp]
  002e4	e8 00 00 00 00	 call	 ?dbWrapValue@@YAMM@Z	; dbWrapValue
  002e9	d9 1c 24	 fstp	 DWORD PTR [esp]
  002ec	6a 01		 push	 1
  002ee	e8 00 00 00 00	 call	 ?dbObjectAngleY@@YAMH@Z	; dbObjectAngleY
  002f3	83 c4 04	 add	 esp, 4
  002f6	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3ff0000000000000
  002fc	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR tv283[ebp]
  00302	d9 85 6c ff ff
	ff		 fld	 DWORD PTR tv283[ebp]
  00308	51		 push	 ecx
  00309	d9 1c 24	 fstp	 DWORD PTR [esp]
  0030c	e8 00 00 00 00	 call	 ?dbWrapValue@@YAMM@Z	; dbWrapValue
  00311	d9 1c 24	 fstp	 DWORD PTR [esp]
  00314	6a 01		 push	 1
  00316	e8 00 00 00 00	 call	 ?dbObjectAngleX@@YAMH@Z	; dbObjectAngleX
  0031b	83 c4 04	 add	 esp, 4
  0031e	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@4000000000000000
  00324	d9 9d 68 ff ff
	ff		 fstp	 DWORD PTR tv291[ebp]
  0032a	d9 85 68 ff ff
	ff		 fld	 DWORD PTR tv291[ebp]
  00330	51		 push	 ecx
  00331	d9 1c 24	 fstp	 DWORD PTR [esp]
  00334	e8 00 00 00 00	 call	 ?dbWrapValue@@YAMM@Z	; dbWrapValue
  00339	d9 1c 24	 fstp	 DWORD PTR [esp]
  0033c	6a 01		 push	 1
  0033e	e8 00 00 00 00	 call	 ?dbRotateObject@@YAXHMMM@Z ; dbRotateObject
  00343	83 c4 10	 add	 esp, 16			; 00000010H

; 48   : 
; 49   : 		if(KeyBoard->IsPressed(0)||Controller->GetIsGenericInput("Button 0",0.5f))

  00346	6a 00		 push	 0
  00348	8b 4d e4	 mov	 ecx, DWORD PTR _KeyBoard$[ebp]
  0034b	e8 00 00 00 00	 call	 ?IsPressed@KeyHandler@@QAE_NH@Z ; KeyHandler::IsPressed
  00350	0f b6 c0	 movzx	 eax, al
  00353	85 c0		 test	 eax, eax
  00355	75 1e		 jne	 SHORT $LN1@DarkGDK
  00357	51		 push	 ecx
  00358	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3f000000
  0035e	d9 1c 24	 fstp	 DWORD PTR [esp]
  00361	68 00 00 00 00	 push	 OFFSET ??_C@_08KCCGPEHE@Button?50?$AA@
  00366	8b 4d e0	 mov	 ecx, DWORD PTR _Controller$[ebp]
  00369	e8 00 00 00 00	 call	 ?GetIsGenericInput@DeviceHandler@@QAE_NPADM@Z ; DeviceHandler::GetIsGenericInput
  0036e	0f b6 c0	 movzx	 eax, al
  00371	85 c0		 test	 eax, eax
  00373	74 04		 je	 SHORT $LN2@DarkGDK
$LN1@DarkGDK:

; 50   : 			gameplay=false;

  00375	c6 45 f3 00	 mov	 BYTE PTR _gameplay$[ebp], 0
$LN2@DarkGDK:

; 51   : 
; 52   : 		Mouse->Update();

  00379	8b 4d e8	 mov	 ecx, DWORD PTR _Mouse$[ebp]
  0037c	e8 00 00 00 00	 call	 ?Update@MouseHandler@@QAEXXZ ; MouseHandler::Update

; 53   : 		KeyBoard->Update();

  00381	8b 4d e4	 mov	 ecx, DWORD PTR _KeyBoard$[ebp]
  00384	e8 00 00 00 00	 call	 ?Update@KeyHandler@@QAEXXZ ; KeyHandler::Update

; 54   : 		Controller->Update();

  00389	8b 4d e0	 mov	 ecx, DWORD PTR _Controller$[ebp]
  0038c	e8 00 00 00 00	 call	 ?Update@DeviceHandler@@QAEXXZ ; DeviceHandler::Update

; 55   : 		GameWindow->Sync();

  00391	8b 4d ec	 mov	 ecx, DWORD PTR _GameWindow$[ebp]
  00394	e8 00 00 00 00	 call	 ?Sync@Window@@QAEXXZ	; Window::Sync

; 56   : 	}

  00399	e9 0a ff ff ff	 jmp	 $LN4@DarkGDK
$LN3@DarkGDK:

; 57   : 
; 58   : 	return;
; 59   : }

  0039e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003a8	59		 pop	 ecx
  003a9	5f		 pop	 edi
  003aa	5e		 pop	 esi
  003ab	5b		 pop	 ebx
  003ac	8b e5		 mov	 esp, ebp
  003ae	5d		 pop	 ebp
  003af	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DarkGDK@@YAXXZ$0:
  00000	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR $T91913[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__unwindfunclet$?DarkGDK@@YAXXZ$1:
  0000e	8b 45 80	 mov	 eax, DWORD PTR $T91917[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
  00018	c3		 ret	 0
__unwindfunclet$?DarkGDK@@YAXXZ$2:
  00019	8b 45 88	 mov	 eax, DWORD PTR $T91921[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	59		 pop	 ecx
  00023	c3		 ret	 0
__unwindfunclet$?DarkGDK@@YAXXZ$3:
  00024	8b 45 90	 mov	 eax, DWORD PTR $T91925[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	59		 pop	 ecx
  0002e	c3		 ret	 0
__unwindfunclet$?DarkGDK@@YAXXZ$4:
  0002f	8b 45 98	 mov	 eax, DWORD PTR $T91929[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00038	59		 pop	 ecx
  00039	c3		 ret	 0
__ehhandler$?DarkGDK@@YAXXZ:
  0003a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00041	8b 8a 64 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-156]
  00047	33 c8		 xor	 ecx, eax
  00049	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DarkGDK@@YAXXZ
  00053	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DarkGDK@@YAXXZ ENDP					; DarkGDK
END
