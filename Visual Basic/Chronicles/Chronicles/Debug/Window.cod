; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	c:\Users\FireEmblem16\Documents\Visual Studio 2008\Projects\Chronicles\Chronicles\Source\Window.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@GHFPNOJB@bad?5allocation?$AA@		; `string'
_DATA	SEGMENT
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
_DATA	ENDS
;	COMDAT ??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
CONST	SEGMENT
??_C@_0P@GHFPNOJB@bad?5allocation?$AA@ DB 'bad allocation', 00H ; `string'
CONST	ENDS
PUBLIC	?SetRefreshRate@Window@@QAEXH@Z			; Window::SetRefreshRate
PUBLIC	?SetCD@Window@@QAEXPAD@Z			; Window::SetCD
PUBLIC	?SetWindowPosition@Window@@QAEXHH@Z		; Window::SetWindowPosition
PUBLIC	?SetWindowTitle@Window@@QAEXPAD@Z		; Window::SetWindowTitle
PUBLIC	??0Window@@QAE@H_N00HHPAD1@Z			; Window::Window
EXTRN	?dbWindowToFront@@YAXXZ:PROC			; dbWindowToFront
EXTRN	?dbShowWindow@@YAXXZ:PROC			; dbShowWindow
EXTRN	?dbDisableEscapeKey@@YAXXZ:PROC			; dbDisableEscapeKey
EXTRN	?dbEnableEscapeKey@@YAXXZ:PROC			; dbEnableEscapeKey
EXTRN	?dbDisableSystemKeys@@YAXXZ:PROC		; dbDisableSystemKeys
EXTRN	?dbEnableSystemKeys@@YAXXZ:PROC			; dbEnableSystemKeys
EXTRN	?dbSetWindowLayout@@YAXHHH@Z:PROC		; dbSetWindowLayout
EXTRN	?dbSetWindowOn@@YAXXZ:PROC			; dbSetWindowOn
EXTRN	?dbSetWindowOff@@YAXXZ:PROC			; dbSetWindowOff
EXTRN	?dbScreenWidth@@YAHXZ:PROC			; dbScreenWidth
EXTRN	?dbScreenHeight@@YAHXZ:PROC			; dbScreenHeight
EXTRN	?dbScreenDepth@@YAHXZ:PROC			; dbScreenDepth
EXTRN	?dbSetDisplayMode@@YAXHHH@Z:PROC		; dbSetDisplayMode
EXTRN	?dbChecklistValueC@@YAHH@Z:PROC			; dbChecklistValueC
EXTRN	?dbChecklistValueB@@YAHH@Z:PROC			; dbChecklistValueB
EXTRN	?dbChecklistValueA@@YAHH@Z:PROC			; dbChecklistValueA
EXTRN	?dbPerformChecklistForDisplayModes@@YAXXZ:PROC	; dbPerformChecklistForDisplayModes
EXTRN	?dbEmptyChecklist@@YAXXZ:PROC			; dbEmptyChecklist
EXTRN	?dbSetGraphicsCard@@YAXPAD@Z:PROC		; dbSetGraphicsCard
EXTRN	?dbChecklistString@@YAPADH@Z:PROC		; dbChecklistString
EXTRN	?dbPerformChecklistForGraphicsCards@@YAXXZ:PROC	; dbPerformChecklistForGraphicsCards
EXTRN	?dbCl$@@YAPADXZ:PROC				; dbCl$
EXTRN	?dbScreenFPS@@YAHXZ:PROC			; dbScreenFPS
EXTRN	?dbHideWindow@@YAXXZ:PROC			; dbHideWindow
; Function compile flags: /Odtp /ZI
; File c:\users\fireemblem16\documents\visual studio 2008\projects\chronicles\chronicles\source\window.cpp
;	COMDAT ??0Window@@QAE@H_N00HHPAD1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_FPS$ = 8						; size = 4
_Full$ = 12						; size = 1
_SysKeys$ = 16						; size = 1
_Esc$ = 20						; size = 1
_X$ = 24						; size = 4
_Y$ = 28						; size = 4
_CD$ = 32						; size = 4
_Title$ = 36						; size = 4
??0Window@@QAE@H_N00HHPAD1@Z PROC			; Window::Window, COMDAT
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 	dbHideWindow();

  0000c	e8 00 00 00 00	 call	 ?dbHideWindow@@YAXXZ	; dbHideWindow

; 24   : 
; 25   : 	this->RefreshRate=FPS;

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _FPS$[ebp]
  00017	89 48 34	 mov	 DWORD PTR [eax+52], ecx

; 26   : 	this->FullScreen=Full;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8a 4d 0c	 mov	 cl, BYTE PTR _Full$[ebp]
  00020	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 27   : 	this->EscapeOn=Esc;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8a 4d 14	 mov	 cl, BYTE PTR _Esc$[ebp]
  00029	88 08		 mov	 BYTE PTR [eax], cl

; 28   : 	this->SystemKeysOn=SysKeys;

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8a 4d 10	 mov	 cl, BYTE PTR _SysKeys$[ebp]
  00031	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 29   : 	this->WindowTitle=Title;

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 4d 24	 mov	 ecx, DWORD PTR _Title$[ebp]
  0003a	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 30   : 	this->ActiveFPS=dbScreenFPS();

  0003d	e8 00 00 00 00	 call	 ?dbScreenFPS@@YAHXZ	; dbScreenFPS
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 31   : 
; 32   : 	this->WindowXPos=X;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 4d 18	 mov	 ecx, DWORD PTR _X$[ebp]
  0004e	89 48 3c	 mov	 DWORD PTR [eax+60], ecx

; 33   : 	this->WindowYPos=Y;

  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 4d 1c	 mov	 ecx, DWORD PTR _Y$[ebp]
  00057	89 48 40	 mov	 DWORD PTR [eax+64], ecx

; 34   : 	this->CurrentDirectory=CD;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d 20	 mov	 ecx, DWORD PTR _CD$[ebp]
  00060	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 35   : 
; 36   : 	this->SetWindowTitle(this->WindowTitle);

  00063	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00069	51		 push	 ecx
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	e8 00 00 00 00	 call	 ?SetWindowTitle@Window@@QAEXPAD@Z ; Window::SetWindowTitle

; 37   : 	this->SetWindowPosition(this->WindowXPos,this->WindowYPos);

  00072	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00078	51		 push	 ecx
  00079	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007c	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0007f	50		 push	 eax
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?SetWindowPosition@Window@@QAEXHH@Z ; Window::SetWindowPosition

; 38   : 	this->SetCD(this->CurrentDirectory);

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0008e	51		 push	 ecx
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	e8 00 00 00 00	 call	 ?SetCD@Window@@QAEXPAD@Z ; Window::SetCD

; 39   : 	this->CommandStrng=dbCl$();

  00097	e8 00 00 00 00	 call	 ?dbCl$@@YAPADXZ		; dbCl$
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 40   : 
; 41   : 	dbPerformChecklistForGraphicsCards();

  000a2	e8 00 00 00 00	 call	 ?dbPerformChecklistForGraphicsCards@@YAXXZ ; dbPerformChecklistForGraphicsCards

; 42   : 	for(this->NumberOfGraphicsCards=0;NULL!=dbChecklistString(this->NumberOfGraphicsCards+1);this->NumberOfGraphicsCards++);

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0
  000b1	eb 0f		 jmp	 SHORT $LN19@Window
$LN18@Window:
  000b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  000b9	83 c1 01	 add	 ecx, 1
  000bc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bf	89 4a 2c	 mov	 DWORD PTR [edx+44], ecx
$LN19@Window:
  000c2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  000c8	83 c1 01	 add	 ecx, 1
  000cb	51		 push	 ecx
  000cc	e8 00 00 00 00	 call	 ?dbChecklistString@@YAPADH@Z ; dbChecklistString
  000d1	83 c4 04	 add	 esp, 4
  000d4	85 c0		 test	 eax, eax
  000d6	74 02		 je	 SHORT $LN17@Window
  000d8	eb d9		 jmp	 SHORT $LN18@Window
$LN17@Window:

; 43   : 	if(this->NumberOfGraphicsCards>0)

  000da	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	83 78 2c 00	 cmp	 DWORD PTR [eax+44], 0
  000e1	7e 37		 jle	 SHORT $LN16@Window

; 44   : 	{
; 45   : 		this->CurrentGraphicsCard=1;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	c7 40 1c 01 00
	00 00		 mov	 DWORD PTR [eax+28], 1

; 46   : 		
; 47   : 		this->CurrentGraphicsCard$=dbChecklistString(this->CurrentGraphicsCard);

  000ed	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f0	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  000f3	51		 push	 ecx
  000f4	e8 00 00 00 00	 call	 ?dbChecklistString@@YAPADH@Z ; dbChecklistString
  000f9	83 c4 04	 add	 esp, 4
  000fc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ff	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 48   : 		dbSetGraphicsCard(dbChecklistString(this->CurrentGraphicsCard));

  00102	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00105	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00108	51		 push	 ecx
  00109	e8 00 00 00 00	 call	 ?dbChecklistString@@YAPADH@Z ; dbChecklistString
  0010e	83 c4 04	 add	 esp, 4
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ?dbSetGraphicsCard@@YAXPAD@Z ; dbSetGraphicsCard
  00117	83 c4 04	 add	 esp, 4
$LN16@Window:

; 49   : 	}
; 50   : 	dbEmptyChecklist();

  0011a	e8 00 00 00 00	 call	 ?dbEmptyChecklist@@YAXXZ ; dbEmptyChecklist

; 51   : 
; 52   : 	dbPerformChecklistForDisplayModes();

  0011f	e8 00 00 00 00	 call	 ?dbPerformChecklistForDisplayModes@@YAXXZ ; dbPerformChecklistForDisplayModes

; 53   : 	for(this->NumberOfResolutions=0;NULL!=dbChecklistString(this->NumberOfResolutions+1);this->NumberOfResolutions++);

  00124	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00127	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0
  0012e	eb 0f		 jmp	 SHORT $LN15@Window
$LN14@Window:
  00130	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00133	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00136	83 c1 01	 add	 ecx, 1
  00139	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0013c	89 4a 30	 mov	 DWORD PTR [edx+48], ecx
$LN15@Window:
  0013f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00142	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00145	83 c1 01	 add	 ecx, 1
  00148	51		 push	 ecx
  00149	e8 00 00 00 00	 call	 ?dbChecklistString@@YAPADH@Z ; dbChecklistString
  0014e	83 c4 04	 add	 esp, 4
  00151	85 c0		 test	 eax, eax
  00153	74 02		 je	 SHORT $LN13@Window
  00155	eb d9		 jmp	 SHORT $LN14@Window
$LN13@Window:

; 54   : 	if(this->NumberOfResolutions>0)

  00157	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0015a	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0015e	0f 8e ad 00 00
	00		 jle	 $LN12@Window

; 55   : 	{
; 56   : 		if(this->FullScreen)

  00164	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00167	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0016b	85 c9		 test	 ecx, ecx
  0016d	74 0c		 je	 SHORT $LN11@Window

; 57   : 			this->CurrentResolution=1;

  0016f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00172	c7 40 20 01 00
	00 00		 mov	 DWORD PTR [eax+32], 1

; 58   : 		else

  00179	eb 49		 jmp	 SHORT $LN10@Window
$LN11@Window:

; 59   : 			for(this->CurrentResolution=1;dbChecklistValueA(this->CurrentResolution)!=800&&dbChecklistValueB(this->CurrentResolution)!=600;this->CurrentResolution++);

  0017b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017e	c7 40 20 01 00
	00 00		 mov	 DWORD PTR [eax+32], 1
  00185	eb 0f		 jmp	 SHORT $LN9@Window
$LN8@Window:
  00187	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0018d	83 c1 01	 add	 ecx, 1
  00190	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00193	89 4a 20	 mov	 DWORD PTR [edx+32], ecx
$LN9@Window:
  00196	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00199	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0019c	51		 push	 ecx
  0019d	e8 00 00 00 00	 call	 ?dbChecklistValueA@@YAHH@Z ; dbChecklistValueA
  001a2	83 c4 04	 add	 esp, 4
  001a5	3d 20 03 00 00	 cmp	 eax, 800		; 00000320H
  001aa	74 18		 je	 SHORT $LN10@Window
  001ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001af	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  001b2	51		 push	 ecx
  001b3	e8 00 00 00 00	 call	 ?dbChecklistValueB@@YAHH@Z ; dbChecklistValueB
  001b8	83 c4 04	 add	 esp, 4
  001bb	3d 58 02 00 00	 cmp	 eax, 600		; 00000258H
  001c0	74 02		 je	 SHORT $LN10@Window
  001c2	eb c3		 jmp	 SHORT $LN8@Window
$LN10@Window:

; 60   : 		
; 61   : 		this->CurrentResolution$=dbChecklistString(this->CurrentResolution);

  001c4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001c7	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  001ca	51		 push	 ecx
  001cb	e8 00 00 00 00	 call	 ?dbChecklistString@@YAPADH@Z ; dbChecklistString
  001d0	83 c4 04	 add	 esp, 4
  001d3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001d6	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 62   : 		dbSetDisplayMode(dbChecklistValueA(this->CurrentResolution),dbChecklistValueB(this->CurrentResolution),dbChecklistValueC(this->CurrentResolution));

  001d9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001dc	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  001df	51		 push	 ecx
  001e0	e8 00 00 00 00	 call	 ?dbChecklistValueC@@YAHH@Z ; dbChecklistValueC
  001e5	83 c4 04	 add	 esp, 4
  001e8	50		 push	 eax
  001e9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001ec	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  001ef	50		 push	 eax
  001f0	e8 00 00 00 00	 call	 ?dbChecklistValueB@@YAHH@Z ; dbChecklistValueB
  001f5	83 c4 04	 add	 esp, 4
  001f8	50		 push	 eax
  001f9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fc	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  001ff	52		 push	 edx
  00200	e8 00 00 00 00	 call	 ?dbChecklistValueA@@YAHH@Z ; dbChecklistValueA
  00205	83 c4 04	 add	 esp, 4
  00208	50		 push	 eax
  00209	e8 00 00 00 00	 call	 ?dbSetDisplayMode@@YAXHHH@Z ; dbSetDisplayMode
  0020e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN12@Window:

; 63   : 	}
; 64   : 	dbEmptyChecklist();

  00211	e8 00 00 00 00	 call	 ?dbEmptyChecklist@@YAXXZ ; dbEmptyChecklist

; 65   : 
; 66   : 	this->SetRefreshRate(this->RefreshRate);

  00216	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00219	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  0021c	51		 push	 ecx
  0021d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00220	e8 00 00 00 00	 call	 ?SetRefreshRate@Window@@QAEXH@Z ; Window::SetRefreshRate

; 67   : 	this->Depth=dbScreenDepth();

  00225	e8 00 00 00 00	 call	 ?dbScreenDepth@@YAHXZ	; dbScreenDepth
  0022a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022d	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 68   : 	this->Height=dbScreenHeight();

  00230	e8 00 00 00 00	 call	 ?dbScreenHeight@@YAHXZ	; dbScreenHeight
  00235	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00238	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 69   : 	this->Width=dbScreenWidth();

  0023b	e8 00 00 00 00	 call	 ?dbScreenWidth@@YAHXZ	; dbScreenWidth
  00240	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00243	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 70   : 
; 71   : 	if(this->FullScreen)

  00246	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00249	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0024d	85 c9		 test	 ecx, ecx
  0024f	74 07		 je	 SHORT $LN6@Window

; 72   : 		dbSetWindowOff();

  00251	e8 00 00 00 00	 call	 ?dbSetWindowOff@@YAXXZ	; dbSetWindowOff

; 73   : 	else

  00256	eb 13		 jmp	 SHORT $LN5@Window
$LN6@Window:

; 74   : 	{
; 75   : 		dbSetWindowOn();

  00258	e8 00 00 00 00	 call	 ?dbSetWindowOn@@YAXXZ	; dbSetWindowOn

; 76   : 		dbSetWindowLayout(1,1,1);

  0025d	6a 01		 push	 1
  0025f	6a 01		 push	 1
  00261	6a 01		 push	 1
  00263	e8 00 00 00 00	 call	 ?dbSetWindowLayout@@YAXHHH@Z ; dbSetWindowLayout
  00268	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@Window:

; 77   : 	}
; 78   : 
; 79   : 	if(this->SystemKeysOn)

  0026b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0026e	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  00272	85 c9		 test	 ecx, ecx
  00274	74 07		 je	 SHORT $LN4@Window

; 80   : 		dbEnableSystemKeys();

  00276	e8 00 00 00 00	 call	 ?dbEnableSystemKeys@@YAXXZ ; dbEnableSystemKeys

; 81   : 	else

  0027b	eb 05		 jmp	 SHORT $LN3@Window
$LN4@Window:

; 82   : 		dbDisableSystemKeys();

  0027d	e8 00 00 00 00	 call	 ?dbDisableSystemKeys@@YAXXZ ; dbDisableSystemKeys
$LN3@Window:

; 83   : 
; 84   : 	if(this->EscapeOn)

  00282	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00285	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00288	85 c9		 test	 ecx, ecx
  0028a	74 07		 je	 SHORT $LN2@Window

; 85   : 		dbEnableEscapeKey();

  0028c	e8 00 00 00 00	 call	 ?dbEnableEscapeKey@@YAXXZ ; dbEnableEscapeKey

; 86   : 	else

  00291	eb 05		 jmp	 SHORT $LN1@Window
$LN2@Window:

; 87   : 		dbDisableEscapeKey();

  00293	e8 00 00 00 00	 call	 ?dbDisableEscapeKey@@YAXXZ ; dbDisableEscapeKey
$LN1@Window:

; 88   : 
; 89   : 	dbShowWindow();

  00298	e8 00 00 00 00	 call	 ?dbShowWindow@@YAXXZ	; dbShowWindow

; 90   : 	dbWindowToFront();

  0029d	e8 00 00 00 00	 call	 ?dbWindowToFront@@YAXXZ	; dbWindowToFront

; 91   : 
; 92   : 	return;
; 93   : }

  002a2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002a5	5f		 pop	 edi
  002a6	5e		 pop	 esi
  002a7	5b		 pop	 ebx
  002a8	8b e5		 mov	 esp, ebp
  002aa	5d		 pop	 ebp
  002ab	c2 20 00	 ret	 32			; 00000020H
??0Window@@QAE@H_N00HHPAD1@Z ENDP			; Window::Window
_TEXT	ENDS
PUBLIC	??1Window@@QAE@XZ				; Window::~Window
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??1Window@@QAE@XZ
_TEXT	SEGMENT
$T91528 = -88						; size = 4
$T91529 = -84						; size = 4
$T91530 = -80						; size = 4
$T91531 = -76						; size = 4
$T91532 = -72						; size = 4
_this$ = -4						; size = 4
??1Window@@QAE@XZ PROC					; Window::~Window, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 96   : 	delete this->CommandStrng;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	89 4d a8	 mov	 DWORD PTR $T91528[ebp], ecx
  00015	8b 55 a8	 mov	 edx, DWORD PTR $T91528[ebp]
  00018	52		 push	 edx
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	83 c4 04	 add	 esp, 4

; 97   : 	delete this->CurrentDirectory;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	89 4d ac	 mov	 DWORD PTR $T91529[ebp], ecx
  0002a	8b 55 ac	 mov	 edx, DWORD PTR $T91529[ebp]
  0002d	52		 push	 edx
  0002e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00033	83 c4 04	 add	 esp, 4

; 98   : 	delete this->CurrentGraphicsCard$;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003c	89 4d b0	 mov	 DWORD PTR $T91530[ebp], ecx
  0003f	8b 55 b0	 mov	 edx, DWORD PTR $T91530[ebp]
  00042	52		 push	 edx
  00043	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00048	83 c4 04	 add	 esp, 4

; 99   : 	delete this->CurrentResolution$;

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00051	89 4d b4	 mov	 DWORD PTR $T91531[ebp], ecx
  00054	8b 55 b4	 mov	 edx, DWORD PTR $T91531[ebp]
  00057	52		 push	 edx
  00058	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005d	83 c4 04	 add	 esp, 4

; 100  : 	delete this->WindowTitle;

  00060	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00066	89 4d b8	 mov	 DWORD PTR $T91532[ebp], ecx
  00069	8b 55 b8	 mov	 edx, DWORD PTR $T91532[ebp]
  0006c	52		 push	 edx
  0006d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00072	83 c4 04	 add	 esp, 4

; 101  : 
; 102  : 	return;
; 103  : }

  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
??1Window@@QAE@XZ ENDP					; Window::~Window
_TEXT	ENDS
PUBLIC	?GetEscapeOn@Window@@QAE_NXZ			; Window::GetEscapeOn
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetEscapeOn@Window@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEscapeOn@Window@@QAE_NXZ PROC			; Window::GetEscapeOn, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	return this->EscapeOn;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 00		 mov	 al, BYTE PTR [eax]

; 107  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetEscapeOn@Window@@QAE_NXZ ENDP			; Window::GetEscapeOn
_TEXT	ENDS
PUBLIC	?GetFullScreen@Window@@QAE_NXZ			; Window::GetFullScreen
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetFullScreen@Window@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFullScreen@Window@@QAE_NXZ PROC			; Window::GetFullScreen, COMDAT
; _this$ = ecx

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 110  : 	return this->FullScreen;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 01	 mov	 al, BYTE PTR [eax+1]

; 111  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetFullScreen@Window@@QAE_NXZ ENDP			; Window::GetFullScreen
_TEXT	ENDS
PUBLIC	?GetSystemKeysOn@Window@@QAE_NXZ		; Window::GetSystemKeysOn
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetSystemKeysOn@Window@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSystemKeysOn@Window@@QAE_NXZ PROC			; Window::GetSystemKeysOn, COMDAT
; _this$ = ecx

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 114  : 	return this->SystemKeysOn;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 02	 mov	 al, BYTE PTR [eax+2]

; 115  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetSystemKeysOn@Window@@QAE_NXZ ENDP			; Window::GetSystemKeysOn
_TEXT	ENDS
PUBLIC	?GetCD@Window@@QAEPADXZ				; Window::GetCD
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetCD@Window@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCD@Window@@QAEPADXZ PROC				; Window::GetCD, COMDAT
; _this$ = ecx

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 	return this->CurrentDirectory;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 119  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCD@Window@@QAEPADXZ ENDP				; Window::GetCD
_TEXT	ENDS
PUBLIC	?GetCommandLineString@Window@@QAEPADXZ		; Window::GetCommandLineString
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetCommandLineString@Window@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCommandLineString@Window@@QAEPADXZ PROC		; Window::GetCommandLineString, COMDAT
; _this$ = ecx

; 121  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 122  : 	return this->CommandStrng;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 123  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCommandLineString@Window@@QAEPADXZ ENDP		; Window::GetCommandLineString
_TEXT	ENDS
PUBLIC	?GetCurrentGraphicsCard$@Window@@QAEPADXZ	; Window::GetCurrentGraphicsCard$
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetCurrentGraphicsCard$@Window@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentGraphicsCard$@Window@@QAEPADXZ PROC		; Window::GetCurrentGraphicsCard$, COMDAT
; _this$ = ecx

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 126  : 	return this->CurrentGraphicsCard$;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]

; 127  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCurrentGraphicsCard$@Window@@QAEPADXZ ENDP		; Window::GetCurrentGraphicsCard$
_TEXT	ENDS
PUBLIC	?GetCurrentResolution$@Window@@QAEPADXZ		; Window::GetCurrentResolution$
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetCurrentResolution$@Window@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentResolution$@Window@@QAEPADXZ PROC		; Window::GetCurrentResolution$, COMDAT
; _this$ = ecx

; 129  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 130  : 	return this->CurrentResolution$;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 131  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCurrentResolution$@Window@@QAEPADXZ ENDP		; Window::GetCurrentResolution$
_TEXT	ENDS
PUBLIC	?GetWindowTitle@Window@@QAEPADXZ		; Window::GetWindowTitle
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetWindowTitle@Window@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWindowTitle@Window@@QAEPADXZ PROC			; Window::GetWindowTitle, COMDAT
; _this$ = ecx

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 134  : 	return this->WindowTitle;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 14	 mov	 eax, DWORD PTR [eax+20]

; 135  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetWindowTitle@Window@@QAEPADXZ ENDP			; Window::GetWindowTitle
_TEXT	ENDS
PUBLIC	?GetCurrentDepth@Window@@QAEHXZ			; Window::GetCurrentDepth
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetCurrentDepth@Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentDepth@Window@@QAEHXZ PROC			; Window::GetCurrentDepth, COMDAT
; _this$ = ecx

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 138  : 	return this->Depth;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 24	 mov	 eax, DWORD PTR [eax+36]

; 139  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCurrentDepth@Window@@QAEHXZ ENDP			; Window::GetCurrentDepth
_TEXT	ENDS
PUBLIC	?GetCurrentGraphicsCard@Window@@QAEHXZ		; Window::GetCurrentGraphicsCard
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetCurrentGraphicsCard@Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentGraphicsCard@Window@@QAEHXZ PROC		; Window::GetCurrentGraphicsCard, COMDAT
; _this$ = ecx

; 141  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 142  : 	return this->CurrentGraphicsCard;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]

; 143  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCurrentGraphicsCard@Window@@QAEHXZ ENDP		; Window::GetCurrentGraphicsCard
_TEXT	ENDS
PUBLIC	?GetCurrentHeight@Window@@QAEHXZ		; Window::GetCurrentHeight
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetCurrentHeight@Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentHeight@Window@@QAEHXZ PROC			; Window::GetCurrentHeight, COMDAT
; _this$ = ecx

; 145  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 146  : 	return this->Height;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 28	 mov	 eax, DWORD PTR [eax+40]

; 147  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCurrentHeight@Window@@QAEHXZ ENDP			; Window::GetCurrentHeight
_TEXT	ENDS
PUBLIC	?GetCurrentResolution@Window@@QAEHXZ		; Window::GetCurrentResolution
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetCurrentResolution@Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentResolution@Window@@QAEHXZ PROC		; Window::GetCurrentResolution, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 150  : 	return this->CurrentResolution;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 20	 mov	 eax, DWORD PTR [eax+32]

; 151  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCurrentResolution@Window@@QAEHXZ ENDP		; Window::GetCurrentResolution
_TEXT	ENDS
PUBLIC	?GetCurrentWidth@Window@@QAEHXZ			; Window::GetCurrentWidth
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetCurrentWidth@Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentWidth@Window@@QAEHXZ PROC			; Window::GetCurrentWidth, COMDAT
; _this$ = ecx

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 154  : 	return this->Width;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 38	 mov	 eax, DWORD PTR [eax+56]

; 155  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCurrentWidth@Window@@QAEHXZ ENDP			; Window::GetCurrentWidth
_TEXT	ENDS
PUBLIC	?GetFPS@Window@@QAEHXZ				; Window::GetFPS
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetFPS@Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFPS@Window@@QAEHXZ PROC				; Window::GetFPS, COMDAT
; _this$ = ecx

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 158  : 	this->ActiveFPS=dbScreenFPS();

  0000c	e8 00 00 00 00	 call	 ?dbScreenFPS@@YAHXZ	; dbScreenFPS
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 159  : 
; 160  : 	return this->ActiveFPS;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 40 18	 mov	 eax, DWORD PTR [eax+24]

; 161  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?GetFPS@Window@@QAEHXZ ENDP				; Window::GetFPS
_TEXT	ENDS
PUBLIC	?GetNumberOfGraphicsCards@Window@@QAEHXZ	; Window::GetNumberOfGraphicsCards
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetNumberOfGraphicsCards@Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumberOfGraphicsCards@Window@@QAEHXZ PROC		; Window::GetNumberOfGraphicsCards, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  : 	return this->NumberOfGraphicsCards;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]

; 165  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetNumberOfGraphicsCards@Window@@QAEHXZ ENDP		; Window::GetNumberOfGraphicsCards
_TEXT	ENDS
PUBLIC	?GetNumberOfResolutions@Window@@QAEHXZ		; Window::GetNumberOfResolutions
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetNumberOfResolutions@Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumberOfResolutions@Window@@QAEHXZ PROC		; Window::GetNumberOfResolutions, COMDAT
; _this$ = ecx

; 167  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 168  : 	return this->NumberOfResolutions;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 30	 mov	 eax, DWORD PTR [eax+48]

; 169  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetNumberOfResolutions@Window@@QAEHXZ ENDP		; Window::GetNumberOfResolutions
_TEXT	ENDS
PUBLIC	?GetRefreshRate@Window@@QAEHXZ			; Window::GetRefreshRate
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetRefreshRate@Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRefreshRate@Window@@QAEHXZ PROC			; Window::GetRefreshRate, COMDAT
; _this$ = ecx

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 172  : 	return this->RefreshRate;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 34	 mov	 eax, DWORD PTR [eax+52]

; 173  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetRefreshRate@Window@@QAEHXZ ENDP			; Window::GetRefreshRate
_TEXT	ENDS
PUBLIC	?GetWindowXPos@Window@@QAEHXZ			; Window::GetWindowXPos
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetWindowXPos@Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWindowXPos@Window@@QAEHXZ PROC			; Window::GetWindowXPos, COMDAT
; _this$ = ecx

; 175  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 176  : 	return this->WindowXPos;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]

; 177  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetWindowXPos@Window@@QAEHXZ ENDP			; Window::GetWindowXPos
_TEXT	ENDS
PUBLIC	?GetWindowYPos@Window@@QAEHXZ			; Window::GetWindowYPos
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetWindowYPos@Window@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWindowYPos@Window@@QAEHXZ PROC			; Window::GetWindowYPos, COMDAT
; _this$ = ecx

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 180  : 	return this->WindowYPos;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 40	 mov	 eax, DWORD PTR [eax+64]

; 181  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetWindowYPos@Window@@QAEHXZ ENDP			; Window::GetWindowYPos
_TEXT	ENDS
PUBLIC	?SetSystemKeys@Window@@QAEX_N@Z			; Window::SetSystemKeys
PUBLIC	?SetFullScreen@Window@@QAEX_N@Z			; Window::SetFullScreen
PUBLIC	?SetEscapeKey@Window@@QAEX_N@Z			; Window::SetEscapeKey
PUBLIC	?SetCurrentResolution@Window@@QAEXH@Z		; Window::SetCurrentResolution
PUBLIC	?SetCurrentGraphicsCard@Window@@QAEXH@Z		; Window::SetCurrentGraphicsCard
PUBLIC	?ApplyToApp@Window@@QAEXXZ			; Window::ApplyToApp
; Function compile flags: /Odtp /ZI
;	COMDAT ?ApplyToApp@Window@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ApplyToApp@Window@@QAEXXZ PROC				; Window::ApplyToApp, COMDAT
; _this$ = ecx

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 184  : 	this->SetCD(this->CurrentDirectory);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00012	51		 push	 ecx
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?SetCD@Window@@QAEXPAD@Z ; Window::SetCD

; 185  : 	this->SetCurrentGraphicsCard(this->CurrentGraphicsCard);

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00021	51		 push	 ecx
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?SetCurrentGraphicsCard@Window@@QAEXH@Z ; Window::SetCurrentGraphicsCard

; 186  : 	this->SetCurrentResolution(this->CurrentResolution);

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00030	51		 push	 ecx
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?SetCurrentResolution@Window@@QAEXH@Z ; Window::SetCurrentResolution

; 187  : 	this->SetEscapeKey(this->EscapeOn);

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0003f	51		 push	 ecx
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?SetEscapeKey@Window@@QAEX_N@Z ; Window::SetEscapeKey

; 188  : 	this->SetFullScreen(this->FullScreen);

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0004f	51		 push	 ecx
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ?SetFullScreen@Window@@QAEX_N@Z ; Window::SetFullScreen

; 189  : 	this->SetRefreshRate(this->RefreshRate);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  0005e	51		 push	 ecx
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?SetRefreshRate@Window@@QAEXH@Z ; Window::SetRefreshRate

; 190  : 	this->SetSystemKeys(this->SystemKeysOn);

  00067	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  0006e	51		 push	 ecx
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ?SetSystemKeys@Window@@QAEX_N@Z ; Window::SetSystemKeys

; 191  : 	this->SetWindowPosition(this->WindowXPos,this->WindowYPos);

  00077	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0007d	51		 push	 ecx
  0007e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00081	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00084	50		 push	 eax
  00085	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	e8 00 00 00 00	 call	 ?SetWindowPosition@Window@@QAEXHH@Z ; Window::SetWindowPosition

; 192  : 	this->SetWindowTitle(this->WindowTitle);

  0008d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00090	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00093	51		 push	 ecx
  00094	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	e8 00 00 00 00	 call	 ?SetWindowTitle@Window@@QAEXPAD@Z ; Window::SetWindowTitle

; 193  : 
; 194  : 	return;
; 195  : }

  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
?ApplyToApp@Window@@QAEXXZ ENDP				; Window::ApplyToApp
_TEXT	ENDS
EXTRN	?dbCD@@YAXPAD@Z:PROC				; dbCD
; Function compile flags: /Odtp /ZI
;	COMDAT ?SetCD@Window@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_CD$ = 8						; size = 4
?SetCD@Window@@QAEXPAD@Z PROC				; Window::SetCD, COMDAT
; _this$ = ecx

; 197  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 198  : 	this->CurrentDirectory=CD;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _CD$[ebp]
  00012	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 199  : 
; 200  : 	dbCD(this->CurrentDirectory);

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ?dbCD@@YAXPAD@Z		; dbCD
  00021	83 c4 04	 add	 esp, 4

; 201  : 
; 202  : 	return;
; 203  : }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?SetCD@Window@@QAEXPAD@Z ENDP				; Window::SetCD
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetCurrentGraphicsCard@Window@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_GC$ = 8						; size = 4
?SetCurrentGraphicsCard@Window@@QAEXH@Z PROC		; Window::SetCurrentGraphicsCard, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 206  : 	if(this->CurrentGraphicsCard!=GC)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00012	3b 4d 08	 cmp	 ecx, DWORD PTR _GC$[ebp]
  00015	0f 84 0d 01 00
	00		 je	 $LN9@SetCurrent

; 207  : 	{
; 208  : 		this->CurrentGraphicsCard=GC;

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _GC$[ebp]
  00021	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 209  : 
; 210  : 		dbPerformChecklistForGraphicsCards();

  00024	e8 00 00 00 00	 call	 ?dbPerformChecklistForGraphicsCards@@YAXXZ ; dbPerformChecklistForGraphicsCards

; 211  : 		this->CurrentGraphicsCard$=dbChecklistString(this->CurrentGraphicsCard);

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ?dbChecklistString@@YAPADH@Z ; dbChecklistString
  00035	83 c4 04	 add	 esp, 4
  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 212  : 		dbSetGraphicsCard(dbChecklistString(this->CurrentGraphicsCard));

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00044	51		 push	 ecx
  00045	e8 00 00 00 00	 call	 ?dbChecklistString@@YAPADH@Z ; dbChecklistString
  0004a	83 c4 04	 add	 esp, 4
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?dbSetGraphicsCard@@YAXPAD@Z ; dbSetGraphicsCard
  00053	83 c4 04	 add	 esp, 4

; 213  : 		dbEmptyChecklist();

  00056	e8 00 00 00 00	 call	 ?dbEmptyChecklist@@YAXXZ ; dbEmptyChecklist

; 214  : 
; 215  : 		dbPerformChecklistForDisplayModes();

  0005b	e8 00 00 00 00	 call	 ?dbPerformChecklistForDisplayModes@@YAXXZ ; dbPerformChecklistForDisplayModes

; 216  : 		for(this->NumberOfResolutions=0;NULL!=dbChecklistString(this->NumberOfResolutions+1);this->NumberOfResolutions++);

  00060	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00063	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0
  0006a	eb 0f		 jmp	 SHORT $LN7@SetCurrent
$LN6@SetCurrent:
  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00072	83 c1 01	 add	 ecx, 1
  00075	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00078	89 4a 30	 mov	 DWORD PTR [edx+48], ecx
$LN7@SetCurrent:
  0007b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00081	83 c1 01	 add	 ecx, 1
  00084	51		 push	 ecx
  00085	e8 00 00 00 00	 call	 ?dbChecklistString@@YAPADH@Z ; dbChecklistString
  0008a	83 c4 04	 add	 esp, 4
  0008d	85 c0		 test	 eax, eax
  0008f	74 02		 je	 SHORT $LN5@SetCurrent
  00091	eb d9		 jmp	 SHORT $LN6@SetCurrent
$LN5@SetCurrent:

; 217  : 		for(this->SetCurrentResolution(1);dbChecklistValueA(this->CurrentResolution)==this->Width&&dbChecklistValueB(this->CurrentResolution)==this->Height&&dbChecklistValueC(this->CurrentResolution)==this->Depth;this->CurrentResolution++);

  00093	6a 01		 push	 1
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?SetCurrentResolution@Window@@QAEXH@Z ; Window::SetCurrentResolution
  0009d	eb 0f		 jmp	 SHORT $LN4@SetCurrent
$LN3@SetCurrent:
  0009f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000a5	83 c1 01	 add	 ecx, 1
  000a8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ab	89 4a 20	 mov	 DWORD PTR [edx+32], ecx
$LN4@SetCurrent:
  000ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b1	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ?dbChecklistValueA@@YAHH@Z ; dbChecklistValueA
  000ba	83 c4 04	 add	 esp, 4
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	3b 42 38	 cmp	 eax, DWORD PTR [edx+56]
  000c3	75 30		 jne	 SHORT $LN2@SetCurrent
  000c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000cb	51		 push	 ecx
  000cc	e8 00 00 00 00	 call	 ?dbChecklistValueB@@YAHH@Z ; dbChecklistValueB
  000d1	83 c4 04	 add	 esp, 4
  000d4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d7	3b 42 28	 cmp	 eax, DWORD PTR [edx+40]
  000da	75 19		 jne	 SHORT $LN2@SetCurrent
  000dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000df	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ?dbChecklistValueC@@YAHH@Z ; dbChecklistValueC
  000e8	83 c4 04	 add	 esp, 4
  000eb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ee	3b 42 24	 cmp	 eax, DWORD PTR [edx+36]
  000f1	75 02		 jne	 SHORT $LN2@SetCurrent
  000f3	eb aa		 jmp	 SHORT $LN3@SetCurrent
$LN2@SetCurrent:

; 218  : 		if(this->CurrentResolution>this->NumberOfResolutions)

  000f5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  000fe	3b 51 30	 cmp	 edx, DWORD PTR [ecx+48]
  00101	7e 20		 jle	 SHORT $LN1@SetCurrent

; 219  : 		{
; 220  : 			this->SetCurrentResolution(1);

  00103	6a 01		 push	 1
  00105	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	e8 00 00 00 00	 call	 ?SetCurrentResolution@Window@@QAEXH@Z ; Window::SetCurrentResolution

; 221  : 
; 222  : 			SetWindowPosition(this->WindowXPos,this->WindowYPos);

  0010d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00110	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00113	51		 push	 ecx
  00114	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00117	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0011a	50		 push	 eax
  0011b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?SetWindowPosition@Window@@QAEXHH@Z ; Window::SetWindowPosition
$LN1@SetCurrent:

; 223  : 		}
; 224  : 		dbEmptyChecklist();

  00123	e8 00 00 00 00	 call	 ?dbEmptyChecklist@@YAXXZ ; dbEmptyChecklist
$LN9@SetCurrent:

; 225  : 	}
; 226  : 
; 227  : 	return;
; 228  : }

  00128	5f		 pop	 edi
  00129	5e		 pop	 esi
  0012a	5b		 pop	 ebx
  0012b	8b e5		 mov	 esp, ebp
  0012d	5d		 pop	 ebp
  0012e	c2 04 00	 ret	 4
?SetCurrentGraphicsCard@Window@@QAEXH@Z ENDP		; Window::SetCurrentGraphicsCard
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetCurrentResolution@Window@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Res$ = 8						; size = 4
?SetCurrentResolution@Window@@QAEXH@Z PROC		; Window::SetCurrentResolution, COMDAT
; _this$ = ecx

; 230  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 231  : 	if(this->CurrentResolution!=Res)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00012	3b 4d 08	 cmp	 ecx, DWORD PTR _Res$[ebp]
  00015	0f 84 97 00 00
	00		 je	 $LN2@SetCurrent@2

; 232  : 	{
; 233  : 		this->CurrentResolution=Res;

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _Res$[ebp]
  00021	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 234  : 
; 235  : 		dbPerformChecklistForDisplayModes();

  00024	e8 00 00 00 00	 call	 ?dbPerformChecklistForDisplayModes@@YAXXZ ; dbPerformChecklistForDisplayModes

; 236  : 		this->CurrentResolution$=dbChecklistString(this->CurrentResolution);

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ?dbChecklistString@@YAPADH@Z ; dbChecklistString
  00035	83 c4 04	 add	 esp, 4
  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 237  : 		dbSetDisplayMode(dbChecklistValueA(this->CurrentResolution),dbChecklistValueB(this->CurrentResolution),dbChecklistValueC(this->CurrentResolution));

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00044	51		 push	 ecx
  00045	e8 00 00 00 00	 call	 ?dbChecklistValueC@@YAHH@Z ; dbChecklistValueC
  0004a	83 c4 04	 add	 esp, 4
  0004d	50		 push	 eax
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00051	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?dbChecklistValueB@@YAHH@Z ; dbChecklistValueB
  0005a	83 c4 04	 add	 esp, 4
  0005d	50		 push	 eax
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ?dbChecklistValueA@@YAHH@Z ; dbChecklistValueA
  0006a	83 c4 04	 add	 esp, 4
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?dbSetDisplayMode@@YAXHHH@Z ; dbSetDisplayMode
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 238  : 		dbEmptyChecklist();

  00076	e8 00 00 00 00	 call	 ?dbEmptyChecklist@@YAXXZ ; dbEmptyChecklist

; 239  : 
; 240  : 		this->Depth=dbScreenDepth();

  0007b	e8 00 00 00 00	 call	 ?dbScreenDepth@@YAHXZ	; dbScreenDepth
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 241  : 		this->Height=dbScreenHeight();

  00086	e8 00 00 00 00	 call	 ?dbScreenHeight@@YAHXZ	; dbScreenHeight
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 242  : 		this->Width=dbScreenWidth();

  00091	e8 00 00 00 00	 call	 ?dbScreenWidth@@YAHXZ	; dbScreenWidth
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 243  : 		SetWindowPosition(this->WindowXPos,this->WindowYPos);

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  000a2	51		 push	 ecx
  000a3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a6	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000a9	50		 push	 eax
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	e8 00 00 00 00	 call	 ?SetWindowPosition@Window@@QAEXHH@Z ; Window::SetWindowPosition
$LN2@SetCurrent@2:

; 244  : 	}
; 245  : 
; 246  : 	return;
; 247  : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
?SetCurrentResolution@Window@@QAEXH@Z ENDP		; Window::SetCurrentResolution
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetEscapeKey@Window@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Esc$ = 8						; size = 1
?SetEscapeKey@Window@@QAEX_N@Z PROC			; Window::SetEscapeKey, COMDAT
; _this$ = ecx

; 249  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 250  : 	this->EscapeOn=Esc;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _Esc$[ebp]
  00012	88 08		 mov	 BYTE PTR [eax], cl

; 251  : 
; 252  : 	if(this->EscapeOn)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 07		 je	 SHORT $LN2@SetEscapeK

; 253  : 		dbEnableEscapeKey();

  0001e	e8 00 00 00 00	 call	 ?dbEnableEscapeKey@@YAXXZ ; dbEnableEscapeKey

; 254  : 	else

  00023	eb 05		 jmp	 SHORT $LN3@SetEscapeK
$LN2@SetEscapeK:

; 255  : 		dbDisableEscapeKey();

  00025	e8 00 00 00 00	 call	 ?dbDisableEscapeKey@@YAXXZ ; dbDisableEscapeKey
$LN3@SetEscapeK:

; 256  : 
; 257  : 	return;
; 258  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?SetEscapeKey@Window@@QAEX_N@Z ENDP			; Window::SetEscapeKey
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetFullScreen@Window@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Full$ = 8						; size = 1
?SetFullScreen@Window@@QAEX_N@Z PROC			; Window::SetFullScreen, COMDAT
; _this$ = ecx

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 261  : 	this->FullScreen=Full;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _Full$[ebp]
  00012	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 262  : 
; 263  : 	if(this->FullScreen)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0001c	85 c9		 test	 ecx, ecx
  0001e	74 07		 je	 SHORT $LN2@SetFullScr

; 264  : 		dbSetWindowOff();

  00020	e8 00 00 00 00	 call	 ?dbSetWindowOff@@YAXXZ	; dbSetWindowOff

; 265  : 	else

  00025	eb 38		 jmp	 SHORT $LN3@SetFullScr
$LN2@SetFullScr:

; 266  : 	{
; 267  : 		dbSetWindowOn();

  00027	e8 00 00 00 00	 call	 ?dbSetWindowOn@@YAXXZ	; dbSetWindowOn

; 268  : 		dbSetWindowLayout(1,1,1);

  0002c	6a 01		 push	 1
  0002e	6a 01		 push	 1
  00030	6a 01		 push	 1
  00032	e8 00 00 00 00	 call	 ?dbSetWindowLayout@@YAXHHH@Z ; dbSetWindowLayout
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH

; 269  : 		SetWindowTitle(this->WindowTitle);

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?SetWindowTitle@Window@@QAEXPAD@Z ; Window::SetWindowTitle

; 270  : 		SetWindowPosition(this->WindowXPos,this->WindowYPos);

  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0004f	51		 push	 ecx
  00050	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00053	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00056	50		 push	 eax
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?SetWindowPosition@Window@@QAEXHH@Z ; Window::SetWindowPosition
$LN3@SetFullScr:

; 271  : 	}
; 272  : 
; 273  : 	return;
; 274  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
?SetFullScreen@Window@@QAEX_N@Z ENDP			; Window::SetFullScreen
_TEXT	ENDS
EXTRN	?dbSyncRate@@YAXH@Z:PROC			; dbSyncRate
EXTRN	?dbSyncOn@@YAXXZ:PROC				; dbSyncOn
; Function compile flags: /Odtp /ZI
;	COMDAT ?SetRefreshRate@Window@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Rate$ = 8						; size = 4
?SetRefreshRate@Window@@QAEXH@Z PROC			; Window::SetRefreshRate, COMDAT
; _this$ = ecx

; 276  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 277  : 	this->RefreshRate=Rate;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _Rate$[ebp]
  00012	89 48 34	 mov	 DWORD PTR [eax+52], ecx

; 278  : 	dbSyncOn();

  00015	e8 00 00 00 00	 call	 ?dbSyncOn@@YAXXZ	; dbSyncOn

; 279  : 	dbSyncRate(this->RefreshRate);

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00020	51		 push	 ecx
  00021	e8 00 00 00 00	 call	 ?dbSyncRate@@YAXH@Z	; dbSyncRate
  00026	83 c4 04	 add	 esp, 4

; 280  : 
; 281  : 	return;
; 282  : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?SetRefreshRate@Window@@QAEXH@Z ENDP			; Window::SetRefreshRate
; Function compile flags: /Odtp /ZI
_TEXT	ENDS
;	COMDAT ?SetSystemKeys@Window@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_position$ = 8						; size = 1
?SetSystemKeys@Window@@QAEX_N@Z PROC			; Window::SetSystemKeys, COMDAT
; _this$ = ecx

; 284  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 285  : 	this->SystemKeysOn=position;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _position$[ebp]
  00012	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 286  : 
; 287  : 	if(this->SystemKeysOn)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  0001c	85 c9		 test	 ecx, ecx
  0001e	74 07		 je	 SHORT $LN2@SetSystemK

; 288  : 		dbEnableSystemKeys();

  00020	e8 00 00 00 00	 call	 ?dbEnableSystemKeys@@YAXXZ ; dbEnableSystemKeys

; 289  : 	else

  00025	eb 05		 jmp	 SHORT $LN3@SetSystemK
$LN2@SetSystemK:

; 290  : 		dbDisableSystemKeys();

  00027	e8 00 00 00 00	 call	 ?dbDisableSystemKeys@@YAXXZ ; dbDisableSystemKeys
$LN3@SetSystemK:

; 291  : 
; 292  : 	return;
; 293  : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?SetSystemKeys@Window@@QAEX_N@Z ENDP			; Window::SetSystemKeys
_TEXT	ENDS
EXTRN	?dbSetWindowPosition@@YAXHH@Z:PROC		; dbSetWindowPosition
; Function compile flags: /Odtp /ZI
;	COMDAT ?SetWindowPosition@Window@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_X$ = 8							; size = 4
_Y$ = 12						; size = 4
?SetWindowPosition@Window@@QAEXHH@Z PROC		; Window::SetWindowPosition, COMDAT
; _this$ = ecx

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 296  : 	this->WindowXPos=X;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _X$[ebp]
  00012	89 48 3c	 mov	 DWORD PTR [eax+60], ecx

; 297  : 	this->WindowYPos=Y;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _Y$[ebp]
  0001b	89 48 40	 mov	 DWORD PTR [eax+64], ecx

; 298  : 
; 299  : 	dbSetWindowPosition(this->WindowXPos,this->WindowYPos);

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00024	51		 push	 ecx
  00025	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00028	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ?dbSetWindowPosition@@YAXHH@Z ; dbSetWindowPosition
  00031	83 c4 08	 add	 esp, 8

; 300  : 	
; 301  : 	return;
; 302  : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
?SetWindowPosition@Window@@QAEXHH@Z ENDP		; Window::SetWindowPosition
_TEXT	ENDS
EXTRN	?dbSetWindowTitle@@YAXPAD@Z:PROC		; dbSetWindowTitle
; Function compile flags: /Odtp /ZI
;	COMDAT ?SetWindowTitle@Window@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_title$ = 8						; size = 4
?SetWindowTitle@Window@@QAEXPAD@Z PROC			; Window::SetWindowTitle, COMDAT
; _this$ = ecx

; 304  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 305  : 	this->WindowTitle=title;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _title$[ebp]
  00012	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 306  : 
; 307  : 	dbSetWindowTitle(this->WindowTitle);

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ?dbSetWindowTitle@@YAXPAD@Z ; dbSetWindowTitle
  00021	83 c4 04	 add	 esp, 4

; 308  : 
; 309  : 	return;
; 310  : }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?SetWindowTitle@Window@@QAEXPAD@Z ENDP			; Window::SetWindowTitle
_TEXT	ENDS
PUBLIC	?Sync@Window@@QAEXXZ				; Window::Sync
EXTRN	?dbSync@@YAXXZ:PROC				; dbSync
EXTRN	?dbFastSync@@YAXXZ:PROC				; dbFastSync
; Function compile flags: /Odtp /ZI
;	COMDAT ?Sync@Window@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Sync@Window@@QAEXXZ PROC				; Window::Sync, COMDAT
; _this$ = ecx

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 313  : 	if(this->FullScreen)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00013	85 c9		 test	 ecx, ecx
  00015	74 07		 je	 SHORT $LN2@Sync

; 314  : 		dbFastSync();

  00017	e8 00 00 00 00	 call	 ?dbFastSync@@YAXXZ	; dbFastSync

; 315  : 	else

  0001c	eb 05		 jmp	 SHORT $LN3@Sync
$LN2@Sync:

; 316  : 		dbSync();

  0001e	e8 00 00 00 00	 call	 ?dbSync@@YAXXZ		; dbSync
$LN3@Sync:

; 317  : 
; 318  : 	return;
; 319  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?Sync@Window@@QAEXXZ ENDP				; Window::Sync
_TEXT	ENDS
END
