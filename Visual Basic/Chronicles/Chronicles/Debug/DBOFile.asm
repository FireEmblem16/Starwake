; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	c:\Program Files\The Game Creators\Dark GDK\Include\DBO Format\DBOFile.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?LoadDBOEx@@YAHPADPAPAUsObject@@@Z		; LoadDBOEx
EXTRN	?ConstructObject@@YA_NPAPAUsObject@@PAPAD@Z:PROC ; ConstructObject
EXTRN	?DBOLoadBlockFile@@YA_NPADPAK1@Z:PROC		; DBOLoadBlockFile
; Function compile flags: /Odtp /ZI
; File c:\program files\the game creators\dark gdk\include\dbo format\dbofile.cpp
;	COMDAT ?LoadDBOEx@@YAHPADPAPAUsObject@@@Z
_TEXT	SEGMENT
_pDBOBlock$ = -8					; size = 4
_dwBlockSize$ = -4					; size = 4
_pFilename$ = 8						; size = 4
_ppObject$ = 12						; size = 4
?LoadDBOEx@@YAHPADPAPAUsObject@@@Z PROC			; LoadDBOEx, COMDAT

; 14   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 15   : 	DWORD dwBlockSize = 0;

	mov	DWORD PTR _dwBlockSize$[ebp], 0

; 16   : 	DWORD* pDBOBlock = NULL;

	mov	DWORD PTR _pDBOBlock$[ebp], 0

; 17   : 
; 18   : 	if ( !DBOLoadBlockFile ( pFilename, (DWORD*)&pDBOBlock, &dwBlockSize ) )

	lea	eax, DWORD PTR _dwBlockSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pDBOBlock$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pFilename$[ebp]
	push	edx
	call	?DBOLoadBlockFile@@YA_NPADPAK1@Z	; DBOLoadBlockFile
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@LoadDBOEx

; 19   : 		return -1;

	or	eax, -1
	jmp	SHORT $LN3@LoadDBOEx
$LN2@LoadDBOEx:

; 20   : 
; 21   : 	if ( !ConstructObject ( ppObject, (LPSTR*)&pDBOBlock ) )

	lea	eax, DWORD PTR _pDBOBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppObject$[ebp]
	push	ecx
	call	?ConstructObject@@YA_NPAPAUsObject@@PAPAD@Z ; ConstructObject
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@LoadDBOEx

; 22   : 		return -2;

	mov	eax, -2					; fffffffeH
	jmp	SHORT $LN3@LoadDBOEx
$LN1@LoadDBOEx:

; 23   : 
; 24   : 	return 1;

	mov	eax, 1
$LN3@LoadDBOEx:

; 25   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadDBOEx@@YAHPADPAPAUsObject@@@Z ENDP			; LoadDBOEx
_TEXT	ENDS
PUBLIC	?SaveDBOEx@@YAHPADPAUsObject@@@Z		; SaveDBOEx
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?DBOSaveBlockFile@@YA_NPADKK@Z:PROC		; DBOSaveBlockFile
EXTRN	?DBOConvertObjectToBlock@@YA_NPAUsObject@@PAK1@Z:PROC ; DBOConvertObjectToBlock
; Function compile flags: /Odtp /ZI
;	COMDAT ?SaveDBOEx@@YAHPADPAUsObject@@@Z
_TEXT	SEGMENT
$T56989 = -76						; size = 4
_pDBOBlock$ = -8					; size = 4
_dwBlockSize$ = -4					; size = 4
_pFilename$ = 8						; size = 4
_pObject$ = 12						; size = 4
?SaveDBOEx@@YAHPADPAUsObject@@@Z PROC			; SaveDBOEx, COMDAT

; 28   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi

; 29   : 	// DBOBlock ptr
; 30   : 	DWORD dwBlockSize = 0;

	mov	DWORD PTR _dwBlockSize$[ebp], 0

; 31   : 	DWORD* pDBOBlock = NULL;

	mov	DWORD PTR _pDBOBlock$[ebp], 0

; 32   : 
; 33   : 	// convert pObject to DBOBlock
; 34   : 	if ( !DBOConvertObjectToBlock ( pObject, (DWORD*)&pDBOBlock, &dwBlockSize ) )

	lea	eax, DWORD PTR _dwBlockSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pDBOBlock$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObject$[ebp]
	push	edx
	call	?DBOConvertObjectToBlock@@YA_NPAUsObject@@PAK1@Z ; DBOConvertObjectToBlock
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@SaveDBOEx

; 35   : 		return -2;

	mov	eax, -2					; fffffffeH
	jmp	SHORT $LN4@SaveDBOEx
$LN3@SaveDBOEx:

; 36   : 		
; 37   : 	// save DBOBlock to file
; 38   : 	if ( !DBOSaveBlockFile ( pFilename, (DWORD)pDBOBlock, dwBlockSize ) )

	mov	eax, DWORD PTR _dwBlockSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDBOBlock$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pFilename$[ebp]
	push	edx
	call	?DBOSaveBlockFile@@YA_NPADKK@Z		; DBOSaveBlockFile
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@SaveDBOEx

; 39   : 		return -3;

	mov	eax, -3					; fffffffdH
	jmp	SHORT $LN4@SaveDBOEx
$LN2@SaveDBOEx:

; 40   : 
; 41   : 	// free block when done
; 42   : 	SAFE_DELETE(pDBOBlock);

	cmp	DWORD PTR _pDBOBlock$[ebp], 0
	je	SHORT $LN1@SaveDBOEx
	mov	eax, DWORD PTR _pDBOBlock$[ebp]
	mov	DWORD PTR $T56989[ebp], eax
	mov	ecx, DWORD PTR $T56989[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR _pDBOBlock$[ebp], 0
$LN1@SaveDBOEx:

; 43   : 
; 44   : 	// okay
; 45   : 	return 1;

	mov	eax, 1
$LN4@SaveDBOEx:

; 46   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveDBOEx@@YAHPADPAUsObject@@@Z ENDP			; SaveDBOEx
_TEXT	ENDS
END
