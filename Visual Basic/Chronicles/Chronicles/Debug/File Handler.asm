; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	c:\Users\FireEmblem16\Documents\Visual Studio 2008\Projects\Chronicles\Chronicles\Source\File Handler.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@GHFPNOJB@bad?5allocation?$AA@		; `string'
_DATA	SEGMENT
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
_DATA	ENDS
;	COMDAT ??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
CONST	SEGMENT
??_C@_0P@GHFPNOJB@bad?5allocation?$AA@ DB 'bad allocation', 00H ; `string'
CONST	ENDS
PUBLIC	??0SaveFile@@QAE@PADE@Z				; SaveFile::SaveFile
EXTRN	?dbFileExist@@YAHPAD@Z:PROC			; dbFileExist
; Function compile flags: /Odtp /ZI
; File c:\users\fireemblem16\documents\visual studio 2008\projects\chronicles\chronicles\source\file handler.cpp
;	COMDAT ??0SaveFile@@QAE@PADE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Name$ = 8						; size = 4
_EncryptionKey$ = 12					; size = 1
??0SaveFile@@QAE@PADE@Z PROC				; SaveFile::SaveFile, COMDAT
; _this$ = ecx

; 22   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 23   : 	this->Key=EncryptionKey;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _EncryptionKey$[ebp]
	mov	BYTE PTR [eax+8], cl

; 24   : 	if(dbFileExist(Name)==1)

	mov	eax, DWORD PTR _Name$[ebp]
	push	eax
	call	?dbFileExist@@YAHPAD@Z			; dbFileExist
	add	esp, 4

; 25   : 		;//Do fancy stuff here for selecting whether or not to overwrite using user input
; 26   : 	this->FileName=Name;//change this so Save Data\\ is added to the name automatically

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Name$[ebp]
	mov	DWORD PTR [eax], ecx

; 27   : 	this->FileSize=500;//filesize doesn't seem to work

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 500			; 000001f4H

; 28   : 
; 29   : 	return;
; 30   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0SaveFile@@QAE@PADE@Z ENDP				; SaveFile::SaveFile
_TEXT	ENDS
PUBLIC	??1SaveFile@@QAE@XZ				; SaveFile::~SaveFile
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /ZI
;	COMDAT ??1SaveFile@@QAE@XZ
_TEXT	SEGMENT
$T92369 = -72						; size = 4
_this$ = -4						; size = 4
??1SaveFile@@QAE@XZ PROC				; SaveFile::~SaveFile, COMDAT
; _this$ = ecx

; 32   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 33   : 	delete this->FileName;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T92369[ebp], ecx
	mov	edx, DWORD PTR $T92369[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 34   : 	
; 35   : 	return;
; 36   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1SaveFile@@QAE@XZ ENDP				; SaveFile::~SaveFile
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?ReadData@SaveFile@@QAEXPADHH@Z			; SaveFile::ReadData
EXTRN	_strcat:PROC
EXTRN	?dbReadByteFromFile@@YAHPADH@Z:PROC		; dbReadByteFromFile
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT ?ReadData@SaveFile@@QAEXPADHH@Z
_TEXT	SEGMENT
_i$91375 = -8						; size = 4
_this$ = -4						; size = 4
_DataStorage$ = 8					; size = 4
_Position$ = 12						; size = 4
_Length$ = 16						; size = 4
?ReadData@SaveFile@@QAEXPADHH@Z PROC			; SaveFile::ReadData, COMDAT
; _this$ = ecx

; 38   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 39   : 	DataStorage="";

	mov	DWORD PTR _DataStorage$[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@

; 40   : 	
; 41   : 	for(int i=0;i<Length&&(Position+i)<this->FileSize;i++)

	mov	DWORD PTR _i$91375[ebp], 0
	jmp	SHORT $LN3@ReadData
$LN2@ReadData:
	mov	eax, DWORD PTR _i$91375[ebp]
	add	eax, 1
	mov	DWORD PTR _i$91375[ebp], eax
$LN3@ReadData:
	mov	eax, DWORD PTR _i$91375[ebp]
	cmp	eax, DWORD PTR _Length$[ebp]
	jge	SHORT $LN4@ReadData
	mov	eax, DWORD PTR _Position$[ebp]
	add	eax, DWORD PTR _i$91375[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jge	SHORT $LN4@ReadData

; 42   : 		strcat(DataStorage,(char*)(dbReadByteFromFile(this->FileName,Position+i)^this->Key));//strcat doesn't seem to work

	mov	eax, DWORD PTR _Position$[ebp]
	add	eax, DWORD PTR _i$91375[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?dbReadByteFromFile@@YAHPADH@Z		; dbReadByteFromFile
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+8]
	xor	eax, edx
	push	eax
	mov	eax, DWORD PTR _DataStorage$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN2@ReadData
$LN4@ReadData:

; 43   : 		//Seems that it won't dynamically locate space thus arrays must be used
; 44   : 	return;
; 45   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ReadData@SaveFile@@QAEXPADHH@Z ENDP			; SaveFile::ReadData
_TEXT	ENDS
PUBLIC	?WriteData@SaveFile@@QAEXPADH@Z			; SaveFile::WriteData
EXTRN	?dbWriteByteToFile@@YAXPADHH@Z:PROC		; dbWriteByteToFile
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT ?WriteData@SaveFile@@QAEXPADH@Z
_TEXT	SEGMENT
_i$91385 = -8						; size = 4
_this$ = -4						; size = 4
_Data$ = 8						; size = 4
_Position$ = 12						; size = 4
?WriteData@SaveFile@@QAEXPADH@Z PROC			; SaveFile::WriteData, COMDAT
; _this$ = ecx

; 47   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 48   : 	for(int i=0;i<strlen(Data)&&(Position+i)<this->FileSize;i++)

	mov	DWORD PTR _i$91385[ebp], 0
	jmp	SHORT $LN3@WriteData
$LN2@WriteData:
	mov	eax, DWORD PTR _i$91385[ebp]
	add	eax, 1
	mov	DWORD PTR _i$91385[ebp], eax
$LN3@WriteData:
	mov	eax, DWORD PTR _Data$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	DWORD PTR _i$91385[ebp], eax
	jae	SHORT $LN4@WriteData
	mov	eax, DWORD PTR _Position$[ebp]
	add	eax, DWORD PTR _i$91385[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jge	SHORT $LN4@WriteData

; 49   : 		dbWriteByteToFile(this->FileName,Position+i,((int)Data[i])^this->Key);

	mov	eax, DWORD PTR _Data$[ebp]
	add	eax, DWORD PTR _i$91385[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+8]
	xor	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _Position$[ebp]
	add	ecx, DWORD PTR _i$91385[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?dbWriteByteToFile@@YAXPADHH@Z		; dbWriteByteToFile
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN2@WriteData
$LN4@WriteData:

; 50   : 
; 51   : 	return;
; 52   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteData@SaveFile@@QAEXPADH@Z ENDP			; SaveFile::WriteData
_TEXT	ENDS
END
